{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ManagerStationInventoryScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport ShadowedBox from 'components/ShadowedBox';\nimport Station, { getGlobalStations } from 'model/Station';\nexport default function ManagerStationInventoryScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      stationModalVisible = _useState2[0],\n      setStationModalVisible = _useState2[1];\n\n  var StationDataList = Station.getStationInventoryData();\n\n  var _Station$getTotalDeta = Station.getTotalDetailedData(),\n      _Station$getTotalDeta2 = _slicedToArray(_Station$getTotalDeta, 3),\n      availItems = _Station$getTotalDeta2[0],\n      soldItems = _Station$getTotalDeta2[1],\n      totalItems = _Station$getTotalDeta2[2];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stationInventorySummary = _useState4[0],\n      setstationInventorySummary = _useState4[1];\n\n  useEffect(function () {\n    var stationInventorySummary = Station.getStationInventorySummary();\n    setstationInventorySummary(stationInventorySummary);\n    console.log(Station.getStationInventoryData());\n  }, []);\n\n  var textColor = function textColor(text) {\n    var rate = Number(text);\n\n    if (rate < 26) {\n      return '#F71E0C';\n    } else if (rate < 70) {\n      return '#E8BD38';\n    }\n\n    return '#1CD338';\n  };\n\n  var percent = function percent(a, b) {\n    if (Number(b) == 0) {\n      return 0;\n    }\n\n    return Math.round(a * 100 / b);\n  };\n\n  var formatNum = function formatNum(num) {\n    if (num != null) {\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n  };\n\n  var stationList = StationDataList.map(function (item) {\n    return React.createElement(ShadowedBox, {\n      width: '40%',\n      height: 100,\n      margin: 5,\n      touchable: true,\n      onPress: function onPress() {\n        return navigation.navigate(\"Manager Individual Station Inventory\", {\n          stationId: item.id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        margin: 3,\n        height: '40%',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        width: '60%',\n        height: '100%',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: {\n        width: '100%',\n        height: '50%',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Station \", item.key, \":\"), React.createElement(Text, {\n      style: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, item.name)), React.createElement(View, {\n      style: {\n        width: '60%',\n        height: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.percentageHeaderBoxTextSize), {}, {\n        color: textColor(percent(item.avail, item.total))\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }\n    }, percent(item.avail, item.total), \"%\"), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.HeaderBoxTextSize), {}, {\n        color: textColor(percent(item.avail, item.total))\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }\n    }, \"Total Available\")))), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        margin: 3,\n        height: '40%',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        width: '50%',\n        marginLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, item.avail, \" of\"), React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, item.total, \" Qty\")), React.createElement(View, {\n      style: _objectSpread(_objectSpread({}, styles.sectionTitle), {}, {\n        width: '40%'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, item.value, \"$\"))));\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 3\n    }\n  }, React.createElement(ShadowedBox, {\n    width: '80%',\n    height: '15%',\n    margin: 10,\n    touchable: true,\n    onPress: function onPress() {\n      return navigation.navigate(\"Manager Total Station Inventory Detailed Data\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.rowView),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      fontWeight: \"bold\",\n      margin: 8,\n      marginTop: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }\n  }, \"Station Inventory:\"), React.createElement(View, {\n    style: {\n      width: '30%',\n      height: '80%',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: 20,\n      color: 'dodgerblue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.percentageHeaderBoxTextSize), {}, {\n      color: textColor(percent(stationInventorySummary[0], stationInventorySummary[1]))\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, percent(stationInventorySummary[0], stationInventorySummary[1]), \"%\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.HeaderBoxTextSize), {}, {\n      color: textColor(percent(stationInventorySummary[0], stationInventorySummary[1]))\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"Available Inventory\")))), React.createElement(ScrollView, {\n    style: {\n      width: '100%',\n      maxHeight: '100%',\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      flexWrap: 'wrap',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      width: '100%',\n      paddingLeft: '5%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, stationList)));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  normalText: {\n    fontSize: 17,\n    fontFamily: 'Arial'\n  },\n  sectionTitle: {\n    color: \"lightgrey\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    borderLeftColor: \"grey\",\n    borderLeftWidth: 1,\n    width: \"100%\"\n  },\n  rowView: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 2\n  },\n  percentageSmallboxTextSize: {\n    fontSize: 16\n  },\n  maxCapacityText: {\n    color: 'dodgerblue'\n  },\n  sixtyText: {\n    color: 'limegreen'\n  },\n  thirtyText: {\n    color: 'darkkhaki'\n  },\n  criticalText: {\n    color: 'red'\n  },\n  percentageHeaderBoxTextSize: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    fontFamily: 'Arial'\n  },\n  HeaderBoxTextSize: {\n    fontSize: 9\n  },\n  Boundingbox: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: \"dodgerblue\",\n    borderBottomColor: \"dodgerblue\",\n    borderBottomWidth: 1,\n    borderTopColor: \"dodgerblue\",\n    borderTopWidth: 1,\n    borderLeftColor: \"dodgerblue\",\n    borderLeftWidth: 1,\n    borderRightColor: \"dodgerblue\",\n    borderRightWidth: 1,\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ManagerStationInventoryScreen.js"],"names":["React","useState","useEffect","ScrollView","ShadowedBox","Station","getGlobalStations","ManagerStationInventoryScreen","route","navigation","stationModalVisible","setStationModalVisible","StationDataList","getStationInventoryData","getTotalDetailedData","availItems","soldItems","totalItems","stationInventorySummary","setstationInventorySummary","getStationInventorySummary","console","log","textColor","text","rate","Number","percent","a","b","Math","round","formatNum","num","toString","replace","stationList","map","item","navigate","stationId","id","flexDirection","margin","height","alignItems","width","justifyContent","fontSize","fontWeight","color","key","name","styles","percentageHeaderBoxTextSize","avail","total","HeaderBoxTextSize","marginLeft","sectionTitle","value","container","rowView","marginTop","marginRight","maxHeight","flexWrap","paddingLeft","StyleSheet","create","flex","backgroundColor","normalText","fontFamily","textAlign","borderLeftColor","borderLeftWidth","padding","percentageSmallboxTextSize","maxCapacityText","sixtyText","thirtyText","criticalText","Boundingbox","borderBottomColor","borderBottomWidth","borderTopColor","borderTopWidth","borderRightColor","borderRightWidth"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport ShadowedBox from 'components/ShadowedBox';\nimport Station, {getGlobalStations}from 'model/Station';\n\n\n\nexport default function ManagerStationInventoryScreen({ route, navigation }) {\n\tconst [stationModalVisible, setStationModalVisible] = useState(false);\n\n\t// TODO: When clicking on the box and navigate to Individual Station Inventory, \n\t// the stationID of the directed station need to be set as below.\n\t//console.log(getGlobalStations())\n\tconst StationDataList = Station.getStationInventoryData()\n\tconst [availItems,soldItems,totalItems] = Station.getTotalDetailedData()\n\tconst [stationInventorySummary, setstationInventorySummary] = useState([]);\n\n\tuseEffect(() => {\n\t\tvar stationInventorySummary = Station.getStationInventorySummary();\n\t\tsetstationInventorySummary(stationInventorySummary);\n\t\tconsole.log(Station.getStationInventoryData())\n\t\t\n\t}, [])\n\n\tconst textColor = (text) => {\n\t\tlet rate = Number(text);\n        if (rate < 26) {\n\t\t\treturn '#F71E0C';\n\t\t} else if (rate < 70) {\n\t\t\treturn '#E8BD38';\n\t\t}\n        return '#1CD338';\n\t}\n\n\tconst percent = (a, b) => {\n\t\tif (Number(b) == 0) {\n\t\t\treturn 0\n\t\t}\n\t\treturn  Math.round(a * 100 / b);\n\t}\n\n\tconst formatNum = (num) => {\n\t\tif (num != null) {\n\t\t\treturn num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\t\t}\n\t}\n\n\n\tconst stationList = StationDataList.map(item => {\n\t\treturn (\n\t\t\t<ShadowedBox width={'40%'} height = {100}  margin={5} touchable onPress={() => navigation.navigate(\"Manager Individual Station Inventory\", {\n\t\t\t\tstationId: item.id,\n\t\t\t})}>\n\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\tmargin: 3,\n\t\t\t\t\theight: '40%',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t// borderWidth: 1,\n\t\t\t\t}}>\n\n\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: '60%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: '50%',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Text style={{fontSize: 14, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t\tStation {item.key}:\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<Text style={{fontSize: 14, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\twidth: '60%',\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\t...styles.percentageHeaderBoxTextSize, \n\t\t\t\t\t\t\t\tcolor: textColor(percent(item.avail, item.total)),\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{percent(item.avail, item.total)}%\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\t...styles.HeaderBoxTextSize, \n\t\t\t\t\t\t\t\tcolor: textColor(percent(item.avail, item.total)),\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tTotal Available\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</View>\n\n\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t</View>\n\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\tmargin: 3,\n\t\t\t\t\theight: '40%',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t// borderWidth: 1,\n\t\t\t\t}}>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: '50%',\n\t\t\t\t\t\tmarginLeft: 10,\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={{fontSize: 12, color: 'gray'}}> \n\t\t\t\t\t\t\t{item.avail} of\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={{fontSize: 12, color: 'gray'}}> \n\t\t\t\t\t\t\t{item.total} Qty\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={{...styles.sectionTitle,\n\t\t\t\t\t\twidth: '40%',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={{fontSize: 12, color: 'gray'}}> \n\t\t\t\t\t\t {item.value}$\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t\n\t\t\t\t</View>\n\n\n\t\t\t</ShadowedBox>\n\t\t);\n\t});\n\n\n\n\n\n\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ShadowedBox width={'80%'} height={'15%'} margin={10} touchable onPress={() => navigation.navigate(\"Manager Total Station Inventory Detailed Data\")}>\n\t\t\t\t<View style={{...styles.rowView}}>\n\n\t\t\t\t\t<Text style={{\n\t\t\t\t\t\tfontSize: 17, \n\t\t\t\t\t\tfontWeight:\"bold\",\n\t\t\t\t\t\tmargin: 8,\n\t\t\t\t\t\tmarginTop: 0,\n\t\t\t\t\t}}>\n\t\t\t\t\t\tStation Inventory:\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\twidth: '30%',\n\t\t\t\t\t\t\theight: '80%',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\tmarginRight: 20,\n\t\t\t\t\t\t\tcolor: 'dodgerblue'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t...styles.percentageHeaderBoxTextSize,\n\t\t\t\t\t\t\tcolor: textColor(percent(stationInventorySummary[0], stationInventorySummary[1])),\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{percent(stationInventorySummary[0], stationInventorySummary[1])}%\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t...styles.HeaderBoxTextSize, \n\t\t\t\t\t\t\tcolor: textColor(percent(stationInventorySummary[0], stationInventorySummary[1])),\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tAvailable Inventory\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</ShadowedBox>\n\n\t\t\t<ScrollView style={{width:'100%',maxHeight:'100%',marginLeft:20}}>\t\t\t\n\t\t\t\t<View style={{\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\t//height: '60%',\n\t\t\t\t\tpaddingLeft: '5%',\n\t\t\t\t}}>\n\t\t\t\t\t{stationList}\n\t\t\t\t</View>\n\t\t\t</ScrollView>\t\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f2f2f2',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\tnormalText: {\n\t\tfontSize: 17,\n\t\tfontFamily: 'Arial'\n\t},\n    sectionTitle: {\n        color: \"lightgrey\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n\t\ttextAlign: \"left\",\n        borderLeftColor: \"grey\",\n        borderLeftWidth: 1,\n        width: \"100%\"\n    },\n\trowView: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: 2\n\t},\n\tpercentageSmallboxTextSize: {\n\t\tfontSize: 16, \n    },\n\n\tmaxCapacityText: {\n        color: 'dodgerblue'\n    },\n    sixtyText: {\n        color: 'limegreen'\n    },\n    thirtyText: {\n        color: 'darkkhaki'\n\t},\n\tcriticalText: {\n        color: 'red'\n\t},\n\tpercentageHeaderBoxTextSize: {\n\t\tfontSize: 20,  \n\t\tfontWeight: 'bold', \n\t\tfontFamily: 'Arial'\n\t},\n\tHeaderBoxTextSize: {\n\t\tfontSize: 9,  \n\t},\n\tBoundingbox:{\n\t\tfontSize: 20, \n\t\tfontWeight: 'bold',  \n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tcolor: \"dodgerblue\",\n        borderBottomColor: \"dodgerblue\",\n\t\tborderBottomWidth: 1,\n\t\tborderTopColor: \"dodgerblue\",\n\t\tborderTopWidth: 1,\n\t\tborderLeftColor: \"dodgerblue\",\n\t\tborderLeftWidth: 1,\n\t\tborderRightColor: \"dodgerblue\",\n\t\tborderRightWidth: 1,\n        width: \"100%\"\n\t}\n});"]},"metadata":{},"sourceType":"module"}