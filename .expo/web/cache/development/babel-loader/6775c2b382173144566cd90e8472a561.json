{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ServerPendingInventoryScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport ConfirmInventoryModal from 'components/ConfirmInventoryModal';\nimport Station from 'model/Station';\nimport Event, { globalEvent } from 'model/Event';\nimport { globalInventory } from 'model/Inventory';\nimport Runner, { globalRunner } from 'model/Runner';\nimport Manager from 'model/Manager';\nimport Job from 'model/Job';\nexport default function ServerPendingInventoryScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      confirmInventoryModal = _useState2[0],\n      setConfirmInventoryModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmInventoryModalVisible = _useState4[0],\n      setConfirmInventoryModalVisible = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskSelected = _useState6[0],\n      setTaskSelected = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      taskIndexSelected = _useState8[0],\n      setTaskIndexSelected = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isRunnerSelected = _useState10[0],\n      setIsRunnerSelected = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      JobList = _useState12[0],\n      setJobList = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      pairItems = _useState14[0],\n      setPairItems = _useState14[1];\n\n  useEffect(function () {\n    var JobList = Job.getJobs();\n    setJobList(JobList);\n    var pairItems = globalInventory.pairItems;\n    setPairItems(pairItems);\n  }, []);\n\n  var filterStation = function filterStation() {\n    var StationJobList = [];\n    JobList.map(function (item) {\n      if (item.status == \"Complete\") {\n        StationJobList.push(item);\n      }\n    });\n    return StationJobList;\n  };\n\n  var filterRunner = function filterRunner() {\n    var StationJobList = [];\n    JobList.map(function (item) {\n      if (item.status == \"Unstarted\" || item.status == \"In transit\") {\n        StationJobList.push(item);\n      }\n    });\n    return StationJobList;\n  };\n\n  var runnerJobs = filterRunner();\n\n  var onConfirmInvModalSave = function onConfirmInvModalSave(drink) {\n    if (drink == null) {\n      setConfirmInventoryModalVisible(false);\n      return;\n    }\n\n    var curTask = taskSelected;\n\n    if (taskSelected.status === \"Complete\") {\n      Job.updateJob(curTask.jobId, drink, \"Confirmed\", null);\n      curTask.drink = drink;\n      curTask.status = \"Confirmed\";\n      curTask.runner = \"Runner \" + globalRunner.key;\n    }\n\n    if (isRunnerSelected) {\n      runnerJobs[taskIndexSelected] = curTask;\n    } else {\n      StationJobsList[taskIndexSelected] = curTask;\n    }\n\n    setConfirmInventoryModalVisible(false);\n  };\n\n  var runnerList = runnerJobs.map(function (item, index) {\n    return React.createElement(ShadowedBox, {\n      width: '40%',\n      height: 100,\n      key: index,\n      margin: 5,\n      touchable: true,\n      onPress: function onPress() {\n        setConfirmInventoryModalVisible(true);\n        setTaskSelected(item);\n        setTaskIndexSelected(index);\n        setIsRunnerSelected(true);\n        confirmInventoryModal.inputDrinkAndStation(item.drink, item.type === \"Return\" ? item.from : item.to, pairItems);\n        confirmInventoryModal.inputJobType(item.type);\n        confirmInventoryModal.inputStatus(item.status);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        margin: 3,\n        height: '90%',\n        width: '90%',\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.sectionTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: _objectSpread(_objectSpread({}, styles.rowView), {}, {\n        width: '90%'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }\n    }, item.runner, \":\"), React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 8\n      }\n    }, item.item < 16 ? \"\" + item.item : item.item.substring(0, 15) + \"...\"))), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, \"Pick Up:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, item.from), React.createElement(Text, {\n      style: [item.status != \"Unstarted\" ? styles.completedText : styles.pendingText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, item.status != \"Unstarted\" ? \"Complete\" : \"Pending\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, \"Drop off:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, item.to), React.createElement(Text, {\n      style: [item.status != \"Unstarted\" ? item.status != \"In transit\" ? styles.completedText : styles.pendingText : styles.pendingText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, item.status != \"Unstarted\" ? item.status != \"In transit\" ? \"Complete\" : \"Pending\" : \"Pending\"))));\n  });\n  var StationJobsList = filterStation();\n  console.log(StationJobsList);\n  var stationList = StationJobsList.map(function (item, index) {\n    return React.createElement(ShadowedBox, {\n      width: '40%',\n      height: 100,\n      key: index,\n      margin: 5,\n      touchable: true,\n      onPress: function onPress() {\n        setConfirmInventoryModalVisible(true);\n        setTaskSelected(item);\n        setTaskIndexSelected(index);\n        setIsRunnerSelected(false);\n        console.log(item.status, index);\n        confirmInventoryModal.inputDrinkAndStation(item.drink, item.type === \"Return\" ? item.from : item.to, pairItems);\n        confirmInventoryModal.inputStatus(item.status);\n        confirmInventoryModal.inputJobType(item.type);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        margin: 3,\n        height: '90%',\n        width: '90%',\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.sectionTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: _objectSpread(_objectSpread({}, styles.rowView), {}, {\n        width: '90%'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 8\n      }\n    }, item.to, \":\"), React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 8\n      }\n    }, item.item < 16 ? \"\" + item.item : item.item.substring(0, 15) + \"...\"))), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, \"Drop off:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }\n    }, item.to), React.createElement(Text, {\n      style: [styles.completedText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, \"Complete\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }, \"Confirmed:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, item.to), React.createElement(Text, {\n      style: [item.status == \"Confirmed\" ? styles.completedText : styles.pendingText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, item.status == \"Confirmed\" ? \"Complete\" : \"Pending\"))));\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 3\n    }\n  }, React.createElement(ConfirmInventoryModal, {\n    serverMode: true,\n    ref: function ref(m) {\n      setConfirmInventoryModal(m);\n    },\n    visible: confirmInventoryModalVisible,\n    onSave: function onSave(drink) {\n      return onConfirmInvModalSave(drink);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 4\n    }\n  }), React.createElement(ShadowedBox, {\n    width: '80%',\n    height: '10%',\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      marginVertical: 20,\n      width: '100%',\n      height: '100%',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      margin: 4,\n      marginLeft: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 6\n    }\n  }, \"Runner: \", globalRunner.name, \" \"))), React.createElement(View, {\n    style: {\n      flexWrap: 'wrap',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      width: '100%',\n      paddingLeft: '2%',\n      marginLeft: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 4\n    }\n  }, runnerList), React.createElement(View, {\n    style: {\n      flexWrap: 'wrap',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      width: '100%',\n      paddingLeft: '2%',\n      marginLeft: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 4\n    }\n  }, stationList));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  normalText: {\n    fontSize: 17,\n    fontFamily: 'Arial'\n  },\n  sectionTitle: {\n    color: \"lightgrey\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    borderBottomColor: \"grey\",\n    borderBottomWidth: 1,\n    width: \"100%\"\n  },\n  rowView: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 2\n  },\n  percentageSmallboxTextSize: {\n    fontSize: 16\n  },\n  maxCapacityText: {\n    color: 'dodgerblue'\n  },\n  sixtyText: {\n    color: 'limegreen'\n  },\n  thirtyText: {\n    color: 'darkkhaki'\n  },\n  criticalText: {\n    color: 'red'\n  },\n  completedText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'green'\n  },\n  pendingText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'gold'\n  },\n  percentageHeaderBoxTextSize: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    fontFamily: 'Arial'\n  },\n  HeaderBoxTextSize: {\n    fontSize: 6\n  },\n  Boundingbox: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: \"dodgerblue\",\n    borderBottomColor: \"dodgerblue\",\n    borderBottomWidth: 1,\n    borderTopColor: \"dodgerblue\",\n    borderTopWidth: 1,\n    borderLeftColor: \"dodgerblue\",\n    borderLeftWidth: 1,\n    borderRightColor: \"dodgerblue\",\n    borderRightWidth: 1,\n    width: \"100%\"\n  },\n  rowViewclose: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    padding: 2\n  },\n  rowViewnormal: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 2\n  }\n});","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ServerPendingInventoryScreen.js"],"names":["React","useState","useEffect","ShadowedBox","ConfirmInventoryModal","Station","Event","globalEvent","globalInventory","Runner","globalRunner","Manager","Job","ServerPendingInventoryScreen","navigation","confirmInventoryModal","setConfirmInventoryModal","confirmInventoryModalVisible","setConfirmInventoryModalVisible","taskSelected","setTaskSelected","taskIndexSelected","setTaskIndexSelected","isRunnerSelected","setIsRunnerSelected","JobList","setJobList","pairItems","setPairItems","getJobs","filterStation","StationJobList","map","item","status","push","filterRunner","runnerJobs","onConfirmInvModalSave","drink","curTask","updateJob","jobId","runner","key","StationJobsList","runnerList","index","inputDrinkAndStation","type","from","to","inputJobType","inputStatus","flexDirection","margin","height","width","alignItems","styles","sectionTitle","rowView","fontSize","fontWeight","color","justifyContent","substring","completedText","pendingText","console","log","stationList","container","m","marginVertical","marginLeft","name","flexWrap","paddingLeft","StyleSheet","create","flex","backgroundColor","normalText","fontFamily","textAlign","borderBottomColor","borderBottomWidth","padding","percentageSmallboxTextSize","maxCapacityText","sixtyText","thirtyText","criticalText","percentageHeaderBoxTextSize","HeaderBoxTextSize","Boundingbox","borderTopColor","borderTopWidth","borderLeftColor","borderLeftWidth","borderRightColor","borderRightWidth","rowViewclose","rowViewnormal"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport ConfirmInventoryModal from 'components/ConfirmInventoryModal';\nimport Station from 'model/Station';\nimport Event, { globalEvent } from 'model/Event';\nimport { globalInventory } from 'model/Inventory';\nimport Runner, { globalRunner } from 'model/Runner';\nimport Manager from 'model/Manager';\nimport Job from 'model/Job';\n\nexport default function ServerPendingInventoryScreen({ navigation }) {\n\tconst [confirmInventoryModal, setConfirmInventoryModal] = useState(false);\n\tconst [confirmInventoryModalVisible, setConfirmInventoryModalVisible] = useState(false);\n\tconst [taskSelected, setTaskSelected] = useState(null);\n\tconst [taskIndexSelected, setTaskIndexSelected] = useState(0);\n\tconst [isRunnerSelected, setIsRunnerSelected] = useState(false);\n\tconst [JobList, setJobList] = useState([]);\n\tconst [pairItems, setPairItems] = useState([]);\n\n\t//const [runnerJobs, setRunnerJobs] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst JobList = Job.getJobs()\n\t\tsetJobList(JobList);\n\n\t\tconst pairItems = globalInventory.pairItems;\n\t\tsetPairItems(pairItems);\n\t}, [])\n\n\t//console.log(JobList)\n\n\n\tconst filterStation = () => {\n\t\tlet StationJobList = []\n\t\tJobList.map(item => {\n\t\t\tif(item.status == \"Complete\"){\n\t\t\t\tStationJobList.push(item)\n\t\t\t}\n\t\t});\n\t\treturn StationJobList\n\t}\n\n\tconst filterRunner = () => {\n\t\tlet StationJobList = []\n\t\tJobList.map(item => {\n\t\t\tif(item.status == \"Unstarted\" || item.status == \"In transit\"){\n\t\t\t\tStationJobList.push(item)\n\t\t\t}\n\t\t});\n\t\treturn StationJobList\n\t}\n\n\tconst runnerJobs = filterRunner()\n\t//setRunnerJobs(filterRunner());\n\n\tconst onConfirmInvModalSave = (drink) => {\n\t\tif (drink == null) {\n\t\t\tsetConfirmInventoryModalVisible(false);\n\t\t\treturn;\n\t\t}\n\t\tconst curTask = taskSelected;\n\t\tif (taskSelected.status === \"Complete\") {\n\t\t\tJob.updateJob(curTask.jobId, drink, \"Confirmed\", null);\n\t\t\tcurTask.drink = drink;\n\t\t\tcurTask.status = \"Confirmed\";\n\t\t\tcurTask.runner = \"Runner \" + globalRunner.key;\n\t\t}\n\t\tif (isRunnerSelected) {\n\t\t\trunnerJobs[taskIndexSelected] = curTask;\n\t\t} else {\n\t\t\tStationJobsList[taskIndexSelected] = curTask;\n\t\t}\n\t\tsetConfirmInventoryModalVisible(false);\n\t}\n\n\tconst runnerList = runnerJobs.map((item, index) => {\n\t\treturn (\n\t\t\t<ShadowedBox width={'40%'} height={100} key={index} margin={5} touchable onPress={() => {\n\t\t\t\tsetConfirmInventoryModalVisible(true);\n\t\t\t\tsetTaskSelected(item);\n\t\t\t\tsetTaskIndexSelected(index);\n\t\t\t\tsetIsRunnerSelected(true);\n\t\t\t\tconfirmInventoryModal.inputDrinkAndStation(\n\t\t\t\t\titem.drink, \n\t\t\t\t\titem.type === \"Return\" ? item.from : item.to,\n\t\t\t\t\tpairItems\n\t\t\t\t);\n\t\t\t\tconfirmInventoryModal.inputJobType(item.type);\n\t\t\t\tconfirmInventoryModal.inputStatus(item.status);\n\t\t\t}}>\n\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tmargin: 3,\n\t\t\t\t\theight: '90%',\n\t\t\t\t\twidth: '90%',\n\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t//borderWidth: 1,\n\t\t\t\t}}>\n\n\t\t\t\t\t<View style={styles.sectionTitle}>\n\t\t\t\t\t\t<View style={{...styles.rowView, width:'90%'}}>\n\t\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t{item.runner}:\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\tfontSize: 10, \n\t\t\t\t\t\t\t\tcolor: 'gray', \n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\t\t\t\t}}> \n\t\t\t\t\t\t\t\t{item.item < 16\n                \t\t\t\t\t? `${item.item}`\n                \t\t\t\t\t: `${item.item.substring(0, 15)}...`}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t\t\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tPick Up:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.from}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[item.status != \"Unstarted\"?styles.completedText : styles.pendingText]}>\n\t\t\t\t\t\t\t\t{item.status != \"Unstarted\"? \"Complete\":\"Pending\"}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tDrop off:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.to}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[item.status != \"Unstarted\"? \n\t\t\t\t\t\t\titem.status != \"In transit\"? \n\t\t\t\t\t\t\t\tstyles.completedText \n\t\t\t\t\t\t\t\t: styles.pendingText \n\t\t\t\t\t\t\t: styles.pendingText]}>\n\t\t\t\t\t\t\t\t{item.status != \"Unstarted\"? \n\t\t\t\t\t\t\titem.status != \"In transit\"? \n\t\t\t\t\t\t\t\t\"Complete\" \n\t\t\t\t\t\t\t\t: \"Pending\" \n\t\t\t\t\t\t\t: \"Pending\"}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\n\n\t\t\t</ShadowedBox>\n\t\t);\n\t});\n\n\tconst StationJobsList = filterStation()\n\tconsole.log(StationJobsList)\n\n\tconst stationList = StationJobsList.map((item, index) => {\n\t\treturn (\n\t\t\t<ShadowedBox width={'40%'} height={100} key={index} margin={5} touchable onPress={() => {\n\t\t\t\tsetConfirmInventoryModalVisible(true);\n\t\t\t\tsetTaskSelected(item);\n\t\t\t\tsetTaskIndexSelected(index);\n\t\t\t\tsetIsRunnerSelected(false);\n\t\t\t\tconsole.log(item.status, index);\n\t\t\t\tconfirmInventoryModal.inputDrinkAndStation(\n\t\t\t\t\titem.drink, \n\t\t\t\t\titem.type === \"Return\" ? item.from : item.to,\n\t\t\t\t\tpairItems\n\t\t\t\t);\n\t\t\t\tconfirmInventoryModal.inputStatus(item.status);\n\t\t\t\tconfirmInventoryModal.inputJobType(item.type);\n\t\t\t}}>\n\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tmargin: 3,\n\t\t\t\t\theight: '90%',\n\t\t\t\t\twidth: '90%',\n\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t//borderWidth: 1,\n\t\t\t\t}}>\n\n\t\t\t\t\t<View style={styles.sectionTitle}>\n\t\t\t\t\t\t<View style={{...styles.rowView, width:'90%'}}>\n\t\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t{item.to}:\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t{item.item < 16\n                \t\t\t\t\t? `${item.item}`\n                \t\t\t\t\t: `${item.item.substring(0, 15)}...`}\t\t\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t\t\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tDrop off:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.to}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[styles.completedText]}>\n\t\t\t\t\t\t\tComplete\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tConfirmed:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.to}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[item.status == \"Confirmed\"? styles.completedText:styles.pendingText]}>\n\t\t\t\t\t\t\t\t{item.status == \"Confirmed\"? \"Complete\":\"Pending\"}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</ShadowedBox>\n\t\t);\n\t});\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ConfirmInventoryModal\n\t\t\t\tserverMode={true}\n\t\t\t\tref={m => {setConfirmInventoryModal(m)}}\n\t\t\t\tvisible={confirmInventoryModalVisible}\n\t\t\t\tonSave={(drink) => onConfirmInvModalSave(drink)}\n\t\t\t/>\n\t\t\t<ShadowedBox width={'80%'} height={'10%'} margin={10}>\n\t\t\t\t<View style={{\n\t\t\t\t\t\tmarginVertical: 20,\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t\tmargin: 10\n\t\t\t\t}}>\n\t\t\t\t\t<Text style={{fontSize: 16, fontWeight:\"bold\", margin:4, marginLeft:12}}>Runner: {globalRunner.name} </Text>\n\t\t\t\t</View>\n\t\t\t</ShadowedBox>\n\t\t\t<View style={{\n\t\t\t\tflexWrap: 'wrap',\n\t\t\t\tflexDirection: 'row',\n\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\twidth: '100%',\n\t\t\t\t//height: '60%',\n\t\t\t\tpaddingLeft: '2%',\n\t\t\t\tmarginLeft:50,\n\t\t\t}}>\n\t\t\t\t{runnerList}\n\t\t\t</View>\n\t\t\t<View style={{\n\t\t\t\tflexWrap: 'wrap',\n\t\t\t\tflexDirection: 'row',\n\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\twidth: '100%',\n\t\t\t\t//height: '60%',\n\t\t\t\tpaddingLeft: '2%',\n\t\t\t\tmarginLeft:50,\n\t\t\t}}>\n\t\t\t\t{stationList}\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f2f2f2',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\tnormalText: {\n\t\tfontSize: 17,\n\t\tfontFamily: 'Arial'\n\t},\n    sectionTitle: {\n        color: \"lightgrey\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n\t\ttextAlign: \"left\",\n        borderBottomColor: \"grey\",\n        borderBottomWidth: 1,\n        width: \"100%\"\n    },\n\trowView: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: 2\n\t},\n\tpercentageSmallboxTextSize: {\n\t\tfontSize: 16, \n    },\n\n\tmaxCapacityText: {\n        color: 'dodgerblue'\n    },\n    sixtyText: {\n        color: 'limegreen'\n    },\n    thirtyText: {\n        color: 'darkkhaki'\n\t},\n\tcriticalText: {\n        color: 'red'\n\t},\n\tcompletedText:{\n\t\tfontSize: 10, \n\t\tfontWeight: 'bold', \n\t\tcolor: 'green'\n\t},\n\tpendingText:{\n\t\tfontSize: 10, \n\t\tfontWeight: 'bold', \n\t\tcolor: 'gold'\n\t},\n\tpercentageHeaderBoxTextSize: {\n\t\tfontSize: 20,  \n\t\tfontWeight: 'bold', \n\t\tfontFamily: 'Arial'\n\t},\n\tHeaderBoxTextSize: {\n\t\tfontSize: 6,  \n\t},\n\tBoundingbox:{\n\t\tfontSize: 20, \n\t\tfontWeight: 'bold',  \n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tcolor: \"dodgerblue\",\n        borderBottomColor: \"dodgerblue\",\n\t\tborderBottomWidth: 1,\n\t\tborderTopColor: \"dodgerblue\",\n\t\tborderTopWidth: 1,\n\t\tborderLeftColor: \"dodgerblue\",\n\t\tborderLeftWidth: 1,\n\t\tborderRightColor: \"dodgerblue\",\n\t\tborderRightWidth: 1,\n        width: \"100%\"\n\t},\n\trowViewclose: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        padding: 2\n\t},\n\trowViewnormal: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: 2\n    },\n});"]},"metadata":{},"sourceType":"module"}