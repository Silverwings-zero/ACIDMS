{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/StationRunnersScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Job from 'model/Job';\nexport default function StationRunnersScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskList = _useState2[0],\n      setTaskList = _useState2[1];\n\n  useEffect(function () {\n    setTaskList(Job.getJobs());\n  }, []);\n\n  var textColor = function textColor(text) {\n    if (text == 'Complete') {\n      return '#51A760';\n    } else if (text == 'In transit') {\n      return '#E9C041';\n    } else if (text == 'Unstarted') {\n      return '#CD594A';\n    }\n\n    return '#0070F7';\n  };\n\n  var taskHistory = taskList.map(function (task) {\n    return React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        flex: 7\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.rowTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }\n    }, task.runner, \":\"), React.createElement(Text, {\n      style: styles.rowTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }\n    }, task.item), React.createElement(Text, {\n      style: styles.rowText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }\n    }, task.from, \" to \", task.to)), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.rowTitle), {}, {\n        color: textColor(task.status),\n        textAlign: \"right\",\n        flex: 3\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, task.status));\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, React.createElement(ShadowedBox, {\n    width: '90%',\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '90%',\n      marginTop: 25,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }, \"Runners:\")), React.createElement(View, {\n    style: {\n      width: '90%',\n      marginBottom: 25,\n      maxHeight: '85%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, taskHistory))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  rowView: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    borderBottomColor: \"grey\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    padding: 5,\n    flex: 1\n  },\n  sectionTitle: {\n    color: \"black\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"left\"\n  },\n  rowTitle: {\n    color: \"#5C5A5A\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    marginBottom: 2,\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  },\n  rowText: {\n    color: \"#5C5A5A\",\n    fontFamily: \"Arial\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    textAlign: \"left\",\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/StationRunnersScreen.js"],"names":["React","useState","useEffect","ShadowedBox","ScrollView","Job","StationRunnersScreen","navigation","taskList","setTaskList","getJobs","textColor","text","taskHistory","map","task","styles","rowView","flexDirection","flex","rowTitle","runner","item","rowText","from","to","color","status","textAlign","container","width","marginTop","marginBottom","sectionTitle","maxHeight","StyleSheet","create","backgroundColor","alignItems","justifyContent","borderBottomColor","borderBottomWidth","hairlineWidth","padding","fontFamily","fontSize","fontWeight","flexWrap"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Job from 'model/Job';\n\nexport default function StationRunnersScreen({ navigation }) {\n\n\tconst [taskList, setTaskList] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetTaskList(Job.getJobs());\n\t}, [])\n\n\tconst textColor = (text) => {\n\t\tif (text == 'Complete') {\n\t\t\treturn '#51A760'\n\t\t} else if (text == 'In transit') {\n\t\t\treturn '#E9C041'\n\t\t} else if (text == 'Unstarted') {\n\t\t\treturn '#CD594A'\n\t\t}\n\t\treturn '#0070F7'\n\t}\n\n\tconst taskHistory = taskList.map(task => {\n\t\treturn (\n\t\t\t<View style={styles.rowView}>\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tflex: 7,\n\t\t\t\t}}>\n\t\t\t\t\t<Text style={styles.rowTitle}>{task.runner}:</Text>\n\t\t\t\t\t<Text style={styles.rowTitle}>{task.item}</Text>\n\t\t\t\t\t<Text style={styles.rowText}>{task.from} to {task.to}</Text>\n\t\t\t\t</View>\n\t\t\t\t<Text style={{\n\t\t\t\t\t...styles.rowTitle, \n\t\t\t\t\tcolor: textColor(task.status),\n\t\t\t\t\ttextAlign: \"right\",\n\t\t\t\t\tflex: 3,\n\t\t\t\t\t}}>{task.status}</Text>\n\t\t\t</View>\n\t\t);\n\t});\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ShadowedBox width={'90%'} margin={10}>\n\t\t\t\t<View style={{width: '90%', marginTop: 25, marginBottom: 10}}>\n\t\t\t\t\t<Text style={styles.sectionTitle}>Runners:</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style = {{width: '90%', marginBottom: 25, maxHeight: '85%'}}>\n                    <ScrollView>\n                        {taskHistory}\n                    </ScrollView>\n                </View>\n\t\t\t</ShadowedBox>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f2f2f2',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\trowView: {\n        width: \"100%\",\n        flexDirection: \"row\",\n\t\tjustifyContent: \"space-between\",\n\t\talignItems: \"flex-end\",\n\t\tborderBottomColor: \"grey\",\n        borderBottomWidth: StyleSheet.hairlineWidth,\n\t\tpadding: 5,\n\t\tflex: 1,\n\t},\n\tsectionTitle: {\n        color: \"black\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n        textAlign: \"left\",\n\t},\n\trowTitle: {\n        color: \"#5C5A5A\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 16,\n        fontWeight: \"bold\",\n\t\ttextAlign: \"left\",\n\t\tmarginBottom: 2,\n\t\tflexWrap: \"wrap\",\n\t\twidth: \"100%\"\n\t},\n\trowText: {\n        color: \"#5C5A5A\",\n        fontFamily: \"Arial\",\n\t\tfontSize: 16,\n\t\tfontWeight: \"normal\",\n\t\ttextAlign: \"left\",\n\t\tflexWrap: \"wrap\",\n\t\twidth: \"100%\"\n    }\n});"]},"metadata":{},"sourceType":"module"}