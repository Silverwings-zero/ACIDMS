{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport AsyncStorage from '@react-native-community/async-storage';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCl2oC7L8StE__HClrXmSJYyR1FPs_2GIc\",\n  authDomain: \"hyppoe-inventory-management.firebaseapp.com\",\n  databaseURL: \"https://hyppoe-inventory-management.firebaseio.com\",\n  projectId: \"hyppoe-inventory-management\",\n  storageBucket: \"hyppoe-inventory-management.appspot.com\",\n  messagingSenderId: \"659207172044\",\n  appId: \"1:659207172044:web:5738c859bf9266797b7769\",\n  measurementId: \"G-T1BH1RYP6X\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nvar DBManager = function () {\n  function DBManager() {\n    _classCallCheck(this, DBManager);\n\n    this.dbh = firebase.firestore();\n    this.store = firebase.storage();\n  }\n\n  _createClass(DBManager, [{\n    key: \"getRunner\",\n    value: function getRunner(id) {\n      return this.getRunnerHandle(id).get();\n    }\n  }, {\n    key: \"getRunnerHandle\",\n    value: function getRunnerHandle(id) {\n      return this.dbh.collection(\"Runner\").doc(id);\n    }\n  }, {\n    key: \"getServer\",\n    value: function getServer(id) {\n      return this.getServerHandle(id).get();\n    }\n  }, {\n    key: \"getServerHandle\",\n    value: function getServerHandle(id) {\n      return this.dbh.collection(\"Server\").doc(id);\n    }\n  }, {\n    key: \"getManager\",\n    value: function getManager(id) {\n      return this.dbh.collection(\"Manager\").doc(id).get();\n    }\n  }, {\n    key: \"setStorage\",\n    value: function setStorage(key, value) {\n      return _regeneratorRuntime.async(function setStorage$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage(key) {\n      return AsyncStorage.getItem(key);\n    }\n  }, {\n    key: \"getInventoryHandle\",\n    value: function getInventoryHandle(id) {\n      return this.dbh.collection(\"Inventory\").doc(id);\n    }\n  }, {\n    key: \"getDrinkType\",\n    value: function getDrinkType(id) {\n      return this.dbh.collection(\"DrinkType\").doc(id).get();\n    }\n  }, {\n    key: \"getPairItemType\",\n    value: function getPairItemType(id) {\n      return this.dbh.collection(\"PairItemType\").doc(id).get();\n    }\n  }, {\n    key: \"getStation\",\n    value: function getStation(id) {\n      return this.getStationHandle(id).get();\n    }\n  }, {\n    key: \"getStationHandle\",\n    value: function getStationHandle(id) {\n      return this.dbh.collection(\"Station\").doc(id);\n    }\n  }, {\n    key: \"getJob\",\n    value: function getJob(id) {\n      return this.getJobHandle(id).get();\n    }\n  }, {\n    key: \"getJobHandle\",\n    value: function getJobHandle(id) {\n      return this.dbh.collection(\"Jobs\").doc(id);\n    }\n  }, {\n    key: \"getDrinksInInventory\",\n    value: function getDrinksInInventory(id) {\n      return this.getDrinksInInventoryHandle(id).get();\n    }\n  }, {\n    key: \"getPairItemsInInventory\",\n    value: function getPairItemsInInventory(id) {\n      return this.getPairItemsInInventoryHandle(id).get();\n    }\n  }, {\n    key: \"getDrinksInInventoryHandle\",\n    value: function getDrinksInInventoryHandle(id) {\n      return this.dbh.collection(\"Inventory\").doc(id).collection(\"drinks\");\n    }\n  }, {\n    key: \"getPairItemsInInventoryHandle\",\n    value: function getPairItemsInInventoryHandle(id) {\n      return this.dbh.collection(\"Inventory\").doc(id).collection(\"pairItems\");\n    }\n  }, {\n    key: \"getDrinksInStation\",\n    value: function getDrinksInStation(id) {\n      return this.getDrinksInStationHandle(id).get();\n    }\n  }, {\n    key: \"getPairItemsInStation\",\n    value: function getPairItemsInStation(id) {\n      return this.getPairItemsInStationHandle(id).get();\n    }\n  }, {\n    key: \"getDrinksInStationHandle\",\n    value: function getDrinksInStationHandle(id) {\n      return this.dbh.collection(\"Station\").doc(id).collection(\"drinks\");\n    }\n  }, {\n    key: \"getPairItemsInStationHandle\",\n    value: function getPairItemsInStationHandle(id) {\n      return this.dbh.collection(\"Station\").doc(id).collection(\"pairItems\");\n    }\n  }, {\n    key: \"getDrinksInServer\",\n    value: function getDrinksInServer(id) {\n      return this.dbh.collection(\"Server\").doc(id).collection(\"soldDrinks\").get();\n    }\n  }, {\n    key: \"getPairItemsInServer\",\n    value: function getPairItemsInServer(id) {\n      return this.dbh.collection(\"Server\").doc(id).collection(\"usedPairItems\").get();\n    }\n  }, {\n    key: \"getDrinksInJob\",\n    value: function getDrinksInJob(id) {\n      return this.getDrinksInJobHandle(id).get();\n    }\n  }, {\n    key: \"getPairItemsInJob\",\n    value: function getPairItemsInJob(id) {\n      return this.getPairItemsInJobHandle(id).get();\n    }\n  }, {\n    key: \"getDrinksInJobHandle\",\n    value: function getDrinksInJobHandle(id) {\n      return this.dbh.collection(\"Jobs\").doc(id).collection(\"drinks\");\n    }\n  }, {\n    key: \"getPairItemsInJobHandle\",\n    value: function getPairItemsInJobHandle(id) {\n      return this.dbh.collection(\"Jobs\").doc(id).collection(\"pairItems\");\n    }\n  }, {\n    key: \"getEvent\",\n    value: function getEvent(id) {\n      return this.getEventHandle(id).get();\n    }\n  }, {\n    key: \"getEventHandle\",\n    value: function getEventHandle(id) {\n      return this.dbh.collection(\"Event\").doc(id);\n    }\n  }, {\n    key: \"updateDrinkTypeInfo\",\n    value: function updateDrinkTypeInfo(id, data) {\n      return this.dbh.collection(\"DrinkType\").doc(id).update(data);\n    }\n  }, {\n    key: \"updateDrinkInStation\",\n    value: function updateDrinkInStation(stationId, updated) {\n      var data;\n      return _regeneratorRuntime.async(function updateDrinkInStation$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getDrinksInStationHandle(stationId).where(\"drinkType\", \"==\", updated.drinkType).get());\n\n            case 2:\n              data = _context2.sent;\n              this.getDrinksInStationHandle(stationId).doc(data.docs[0].id).set(updated);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"updateDrinkInInventory\",\n    value: function updateDrinkInInventory(inventoryId, drinkId, data) {\n      return this.dbh.collection(\"Inventory\").doc(inventoryId).collection(\"drinks\").doc(drinkId).update(data);\n    }\n  }, {\n    key: \"updateDrinkInventoryByType\",\n    value: function updateDrinkInventoryByType(inventoryId, data) {\n      var _this = this;\n\n      this.dbh.collection(\"Inventory\").doc(inventoryId).collection(\"drinks\").get().then(function (snapshot) {\n        console.log(\"Drinks: \", snapshot.size);\n        snapshot.forEach(function (snap) {\n          console.log(data);\n\n          if (snap.data().drinkType == data.drinkType) {\n            console.log(\"FOUND:\", data.drinkType);\n\n            _this.dbh.collection(\"Inventory\").doc(inventoryId).collection(\"drinks\").doc(snap.id).update(data).then(function (d) {\n              console.log(d);\n            }).catch(function (e) {\n              console.log(e);\n            });\n          }\n\n          console.log(\"snap id: \", snap.id, snap.data());\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"uploadImage\",\n    value: function uploadImage(eventId, imgFile) {\n      var _this2 = this;\n\n      console.log(\"Event: \", eventId);\n      fetch(imgFile).then(function (data) {\n        console.log(\"imgFile: \", imgFile);\n\n        _this2.store.ref().child(eventId).child(\"drinks\").put(data).catch(function (e) {\n          return console.log(e);\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"createDrinkInventory\",\n    value: function createDrinkInventory(inventoryId, data) {\n      return this.dbh.collection(\"Inventory\").doc(inventoryId).collection(\"drinks\").add(data);\n    }\n  }, {\n    key: \"createDrinkTypeInfo\",\n    value: function createDrinkTypeInfo(data) {\n      return this.dbh.collection(\"DrinkType\").add(data);\n    }\n  }, {\n    key: \"createNewJob\",\n    value: function createNewJob(job, pairItems) {\n      var res, id, ref, _iterator, _step, pairItem;\n\n      return _regeneratorRuntime.async(function createNewJob$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.dbh.collection(\"Jobs\").add(job));\n\n            case 2:\n              res = _context3.sent;\n              id = res.id;\n              ref = this.getJobHandle(id);\n              _iterator = _createForOfIteratorHelperLoose(pairItems);\n\n            case 6:\n              if ((_step = _iterator()).done) {\n                _context3.next = 12;\n                break;\n              }\n\n              pairItem = _step.value;\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(ref.collection(\"pairItems\").add(pairItem));\n\n            case 10:\n              _context3.next = 6;\n              break;\n\n            case 12:\n              return _context3.abrupt(\"return\", id);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"updateJob\",\n    value: function updateJob(id, drink, status, runnerId) {\n      console.log(id);\n      var baseRef = this.dbh.collection(\"Jobs\");\n      baseRef.get().then(function (snapshot) {\n        console.log(\"Drinks: \", snapshot.size);\n        snapshot.forEach(function (snap) {\n          if (snap.id === id) {\n            console.log(\"found: \", id);\n            var newData = snap.data();\n\n            if (status != null) {\n              newData.status = status;\n            }\n\n            if (runnerId != null) {\n              newData.runnerId = runnerId;\n            }\n\n            newData.drink = drink;\n            baseRef.doc(snap.id).update(newData);\n          }\n\n          console.log(\"snap id: \", snap.id);\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"updateDrinkInventoryById\",\n    value: function updateDrinkInventoryById(drinkId, obj) {\n      console.log(drinkId, obj);\n      return this.dbh.collection(\"Inventory\").doc(\"h6Q9BwsaW51bnTv9zUe8\").collection(\"drinks\").doc(drinkId).update(obj);\n    }\n  }]);\n\n  return DBManager;\n}();\n\nexport var dbManager = new DBManager();","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/model/DBManager.js"],"names":["firebase","AsyncStorage","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","DBManager","dbh","firestore","store","storage","id","getRunnerHandle","get","collection","doc","getServerHandle","key","value","setItem","console","log","getItem","getStationHandle","getJobHandle","getDrinksInInventoryHandle","getPairItemsInInventoryHandle","getDrinksInStationHandle","getPairItemsInStationHandle","getDrinksInJobHandle","getPairItemsInJobHandle","getEventHandle","data","update","stationId","updated","where","drinkType","docs","set","inventoryId","drinkId","then","snapshot","size","forEach","snap","d","catch","e","eventId","imgFile","fetch","ref","child","put","add","job","pairItems","res","pairItem","drink","status","runnerId","baseRef","newData","obj","dbManager"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport AsyncStorage from '@react-native-community/async-storage';\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCl2oC7L8StE__HClrXmSJYyR1FPs_2GIc\",\n    authDomain: \"hyppoe-inventory-management.firebaseapp.com\",\n    databaseURL: \"https://hyppoe-inventory-management.firebaseio.com\",\n    projectId: \"hyppoe-inventory-management\",\n    storageBucket: \"hyppoe-inventory-management.appspot.com\",\n    messagingSenderId: \"659207172044\",\n    appId: \"1:659207172044:web:5738c859bf9266797b7769\",\n    measurementId: \"G-T1BH1RYP6X\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n\n// For the types in this \nclass DBManager {\n    constructor() {\n        this.dbh = firebase.firestore();\n        this.store = firebase.storage();\n    }\n\n    // get<Type> return: Promise<Snapshot>\n    // https://firebase.google.com/docs/reference/js/firebase.firestore.QuerySnapshot\n    // https://firebase.google.com/docs/reference/js/firebase.firestore.DocumentSnapshot\n    // get<Type>Handle return: DocumentReference\n    // https://firebase.google.com/docs/reference/js/firebase.firestore.DocumentChange\n\n    getRunner(id) {\n        return this.getRunnerHandle(id).get();\n    }\n\n    getRunnerHandle(id) {\n        return this.dbh.collection(\"Runner\").doc(id);\n    }\n\n    getServer(id) {\n        return this.getServerHandle(id).get();\n    }\n\n    getServerHandle(id) {\n        return this.dbh.collection(\"Server\").doc(id);\n    }\n\n    getManager(id) {\n        return this.dbh.collection(\"Manager\").doc(id).get();\n    }\n\n    async setStorage(key, value) {\n        try {\n            await AsyncStorage.setItem(key, value);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    // returns the promise for customized then operations in usage\n    getStorage(key) {\n        return AsyncStorage.getItem(key);\n    }\n\n    getInventoryHandle(id) {\n        return this.dbh.collection(\"Inventory\").doc(id);\n    }\n\n    getDrinkType(id) {\n        return this.dbh.collection(\"DrinkType\").doc(id).get();\n    }\n\n    getPairItemType(id) {\n        return this.dbh.collection(\"PairItemType\").doc(id).get();\n    }\n\n    getStation(id) {\n        return this.getStationHandle(id).get();\n    }\n\n    getStationHandle(id) {\n        return this.dbh.collection(\"Station\").doc(id);\n    }\n\n    getJob(id) {\n        return this.getJobHandle(id).get();\n    }\n\n    getJobHandle(id) {\n        return this.dbh.collection(\"Jobs\").doc(id);\n    }\n\n    getDrinksInInventory(id) {\n        return this.getDrinksInInventoryHandle(id).get();\n    }\n\n    getPairItemsInInventory(id) {\n        return this.getPairItemsInInventoryHandle(id).get();\n    }\n\n    getDrinksInInventoryHandle(id) {\n        return this.dbh.collection(\"Inventory\").doc(id).collection(\"drinks\");\n    }\n\n    getPairItemsInInventoryHandle(id) {\n        return this.dbh.collection(\"Inventory\").doc(id).collection(\"pairItems\");\n    }\n\n    getDrinksInStation(id) {\n        return this.getDrinksInStationHandle(id).get();\n    }\n\n    getPairItemsInStation(id) {\n        return this.getPairItemsInStationHandle(id).get();\n    }\n\n    getDrinksInStationHandle(id) {\n        return this.dbh.collection(\"Station\").doc(id).collection(\"drinks\");\n    }\n\n    getPairItemsInStationHandle(id) {\n        return this.dbh.collection(\"Station\").doc(id).collection(\"pairItems\");\n    }\n\n    getDrinksInServer(id) {\n        return this.dbh.collection(\"Server\").doc(id).collection(\"soldDrinks\").get();\n    }\n\n    getPairItemsInServer(id) {\n        return this.dbh.collection(\"Server\").doc(id).collection(\"usedPairItems\").get();\n    }\n\n    getDrinksInJob(id) {\n        return this.getDrinksInJobHandle(id).get();\n    }\n\n    getPairItemsInJob(id) {\n        return this.getPairItemsInJobHandle(id).get();\n    }\n\n    getDrinksInJobHandle(id) {\n        return this.dbh.collection(\"Jobs\").doc(id).collection(\"drinks\");\n    }\n\n    getPairItemsInJobHandle(id) {\n        return this.dbh.collection(\"Jobs\").doc(id).collection(\"pairItems\");\n    }\n\n    getEvent(id) {\n        return this.getEventHandle(id).get();\n    }\n\n    getEventHandle(id) {\n        return this.dbh.collection(\"Event\").doc(id);\n    }\n\n    // return Promise<void>\n    // https://firebase.google.com/docs/database/web/read-and-write\n    updateDrinkTypeInfo(id, data) {\n        return this.dbh.collection(\"DrinkType\").doc(id).update(data);\n    }\n\n    async updateDrinkInStation(stationId, updated) {\n        var data = await this.getDrinksInStationHandle(stationId).where(\"drinkType\", \"==\", updated.drinkType).get();\n        this.getDrinksInStationHandle(stationId).doc(data.docs[0].id).set(updated);\n    }\n\n    updateDrinkInInventory(inventoryId, drinkId, data) {\n        return this.dbh.collection(\"Inventory\").doc(inventoryId)\n                       .collection(\"drinks\").doc(drinkId)\n                       .update(data);\n    }\n\n    // return void\n    updateDrinkInventoryByType(inventoryId, data) {\n        this.dbh.collection(\"Inventory\").doc(inventoryId).collection(\"drinks\").get()\n        .then(snapshot => {\n\t\t    console.log(\"Drinks: \", snapshot.size);\n\t\t    snapshot.forEach(snap => {\n                console.log(data);\n                if (snap.data().drinkType == data.drinkType) {\n                    console.log(\"FOUND:\", data.drinkType);\n                    this.dbh.collection(\"Inventory\")\n                    .doc(inventoryId)\n                    .collection(\"drinks\")\n                    .doc(snap.id).update(data)\n                    .then(d => {console.log(d)})\n                    .catch(e => {console.log(e)});\n                }\n\t\t       \tconsole.log(\"snap id: \", snap.id, snap.data());\n\t\t    })\n        })\n        .catch(e => {console.log(e)});\n    }\n\n    uploadImage(eventId, imgFile) {\n        console.log(\"Event: \", eventId);\n        fetch(imgFile).then(data => {\n            console.log(\"imgFile: \", imgFile);\n            this.store.ref().child(eventId).child(\"drinks\").put(data).catch(e => console.log(e));\n        }).catch(e => console.log(e));\n    }\n\n    // return Promise<DocumentReference>\n    // https://firebase.google.com/docs/reference/js/firebase.firestore.DocumentReference\n    createDrinkInventory(inventoryId, data) {\n        return this.dbh.collection(\"Inventory\").doc(inventoryId).collection(\"drinks\").add(data);\n    }\n\n    // return: Promise<DocumentReference>\n    // https://firebase.google.com/docs/reference/js/firebase.firestore.DocumentReference\n    createDrinkTypeInfo(data) {\n        return this.dbh.collection(\"DrinkType\").add(data);\n    }\n\n    async createNewJob(job, pairItems) {\n        const res = await this.dbh.collection(\"Jobs\").add(job);\n        // console.log(res.id);\n        const id = res.id;\n        const ref = this.getJobHandle(id);\n        for (let pairItem of pairItems) {\n            await ref.collection(\"pairItems\").add(pairItem);\n        }\n        return id;\n    }\n\n    updateJob(id, drink, status, runnerId) {\n        console.log(id);\n        const baseRef = this.dbh.collection(\"Jobs\");\n        baseRef.get()\n        .then(snapshot => {\n\t\t    console.log(\"Drinks: \", snapshot.size);\n\t\t    snapshot.forEach(snap => {\n                \n                if (snap.id === id) {\n                    console.log(\"found: \", id);\n                    let newData = snap.data();\n                    if (status != null) {\n                        newData.status = status;\n                    }\n                    \n                    if (runnerId != null) {\n                        newData.runnerId = runnerId;\n                    }\n                    newData.drink = drink;\n                    baseRef.doc(snap.id).update(newData);\n                }\n\t\t       \tconsole.log(\"snap id: \", snap.id);\n\t\t    })\n        })\n        .catch(e => {console.log(e)});\n    }\n\n    // return void\n    // createDrinkTypeInfo(data) {\n    //     this.dbh.collection(\"DrinkType\").get()\n    //     .then(snapshot => {\n    //         console.log(\"Drinks: \", snapshot.size);\n    //         var found = false;\n\t// \t    snapshot.forEach(snap => {\n    //             console.log(data);\n    //             if (snap.data().id == data.id) {\n    //                 console.log(\"FOUND:\", data.id);\n    //                 found = true;\n    //             }\n    //         });\n    //         if (!found) {\n    //             this.dbh.collection(\"DrinkType\").add(data);\n    //         }\n    //         console.log(\"FOUND: \", found);\n    //     })\n    //     .catch(e => {console.log(e)});\n    // }\n\n    // return Promise<void>\n    // https://firebase.google.com/docs/database/web/read-and-write\n    updateDrinkInventoryById(drinkId, obj) {\n        console.log(drinkId, obj);\n        return this.dbh.collection(\"Inventory\").doc(\"h6Q9BwsaW51bnTv9zUe8\").collection(\"drinks\").doc(drinkId).update(obj);\n    }\n}\n\nexport var dbManager = new DBManager();"]},"metadata":{},"sourceType":"module"}