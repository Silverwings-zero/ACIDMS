{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/TotalInventoryScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect, useState } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport BottomBlueBUtton from 'components/BottomBlueButton';\nimport InputUpdateInventoryModal from 'components/InputUpdateInventoryModal';\nimport InputBlankInventoryModal from 'components/InputBlankInventoryModal';\nimport { globalInventory } from 'model/Inventory';\nimport { globalEvent } from 'model/Event';\nimport { dbManager } from \"../model/DBManager\";\n\nvar TotalInventory = function (_React$Component) {\n  _inherits(TotalInventory, _React$Component);\n\n  var _super = _createSuper(TotalInventory);\n\n  function TotalInventory() {\n    var _this;\n\n    _classCallCheck(this, TotalInventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      inputInvUpdateModalVisible: false,\n      inputBlkUpdateModalVisible: false,\n      selectedDrink: 0,\n      drinks: [],\n      percentage: 0,\n      totalValue: 0.00,\n      totalUnits: 0,\n      inventoryId: null\n    };\n    return _this;\n  }\n\n  _createClass(TotalInventory, [{\n    key: \"onInvModalSave\",\n    value: function onInvModalSave(drink) {\n      var _this2 = this;\n\n      var newDrinks = this.state.drinks;\n      newDrinks[this.state.selectedDrink] = drink;\n      console.log(drink);\n      this.setState({\n        inputInvUpdateModalVisible: false,\n        drinks: newDrinks\n      });\n      globalInventory.updateDrink(drink).then(function (r) {\n        return _this2.updateData();\n      });\n    }\n  }, {\n    key: \"onBlkModalSave\",\n    value: function onBlkModalSave(drink) {\n      var _this3 = this;\n\n      console.log(\"Icon: \", drink.drinkType.icon);\n      var newDrinks = this.state.drinks;\n      newDrinks.push(drink);\n      this.setState({\n        inputBlkUpdateModalVisible: false,\n        drinks: newDrinks\n      });\n      console.log(\"OK\\n\");\n      globalInventory.addDrinkType(drink).then(function (r) {\n        console.log(\"Return value:\", r[0].id);\n\n        var newDrink = _objectSpread({\n          typeId: r[0].id\n        }, drink);\n\n        console.log(\"Type: \", newDrink.typeId);\n        globalInventory.addDrink(newDrink).catch(function (e) {\n          return console.log(e);\n        });\n\n        _this3.updateData();\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateData();\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var _globalInventory$getT = globalInventory.getTotalInventory(),\n          _globalInventory$getT2 = _slicedToArray(_globalInventory$getT, 2),\n          quantity = _globalInventory$getT2[0],\n          value = _globalInventory$getT2[1];\n\n      console.log(globalInventory.drinks);\n      this.setState({\n        drinks: globalInventory.drinks,\n        percentage: quantity > 0 ? 100 : 0,\n        totalValue: value,\n        totalUnits: quantity,\n        inventoryId: globalInventory.id,\n        eventId: globalEvent.id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var drinkList = this.state.drinks.map(function (item, index) {\n        return React.createElement(ShadowedBox, {\n          key: index,\n          width: '30%',\n          square: true,\n          margin: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }\n        }, React.createElement(TouchableOpacity, {\n          key: item.name,\n          onPress: function onPress() {\n            _this4.setState({\n              inputInvUpdateModalVisible: true,\n              selectedDrink: index\n            });\n\n            _this4.inputUpdateInventoryModal.inputDrink(_this4.state.drinks[index]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 6\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: item.icon\n          },\n          style: {\n            width: 100,\n            height: 100,\n            borderRadius: 15,\n            overflow: 'hidden',\n            resizeMode: 'contain'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }\n        })));\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 4\n        }\n      }, React.createElement(BottomBlueBUtton, {\n        text: \"Complete Inventory and Add Stations\",\n        onPress: function onPress() {\n          return _this4.props.navigation.navigate('Assign Inventory Create Station');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }\n      }), React.createElement(InputUpdateInventoryModal, {\n        key: this.state.inputDrinkName,\n        ref: function ref(m) {\n          _this4.inputUpdateInventoryModal = m;\n        },\n        visible: this.state.inputInvUpdateModalVisible,\n        onSave: this.onInvModalSave.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }\n      }), React.createElement(InputBlankInventoryModal, {\n        visible: this.state.inputBlkUpdateModalVisible,\n        onSave: this.onBlkModalSave.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 5\n        }\n      }), React.createElement(ShadowedBox, {\n        width: '80%',\n        height: '20%',\n        margin: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '90%',\n          height: '40%',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          fontFamily: 'Arial'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, \"Total Inventory:\"), React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, this.state.percentage, \"%\")), React.createElement(View, {\n        style: {\n          width: '90%',\n          height: '40%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.normalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 8\n        }\n      }, \"Total Inventory Value:\"), React.createElement(Text, {\n        style: styles.normalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 8\n        }\n      }, \"$\", this.state.totalValue)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.normalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 8\n        }\n      }, \"Total Units:\"), React.createElement(Text, {\n        style: styles.normalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 8\n        }\n      }, this.state.totalUnits, \" of \", this.state.totalUnits)))), React.createElement(View, {\n        style: {\n          flexWrap: 'wrap',\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          width: '100%',\n          paddingLeft: '2%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 5\n        }\n      }, drinkList, React.createElement(ShadowedBox, {\n        width: '30%',\n        square: true,\n        margin: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: {\n          width: '100%',\n          aspectRatio: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this4.setState({\n            inputBlkUpdateModalVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 8\n        }\n      }, React.createElement(Image, {\n        source: require('assets/add.png'),\n        style: {\n          width: 40,\n          height: 40,\n          overflow: 'hidden',\n          resizeMode: 'contain',\n          margin: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, \" Add Item \"))))));\n    }\n  }]);\n\n  return TotalInventory;\n}(React.Component);\n\nexport { TotalInventory as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  normalText: {\n    fontSize: 17,\n    fontFamily: 'Arial'\n  }\n});","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/TotalInventoryScreen.js"],"names":["React","useEffect","useState","ShadowedBox","BottomBlueBUtton","InputUpdateInventoryModal","InputBlankInventoryModal","globalInventory","globalEvent","dbManager","TotalInventory","state","inputInvUpdateModalVisible","inputBlkUpdateModalVisible","selectedDrink","drinks","percentage","totalValue","totalUnits","inventoryId","drink","newDrinks","console","log","setState","updateDrink","then","r","updateData","drinkType","icon","push","addDrinkType","id","newDrink","typeId","addDrink","catch","e","getTotalInventory","quantity","value","eventId","drinkList","map","item","index","name","inputUpdateInventoryModal","inputDrink","uri","width","height","borderRadius","overflow","resizeMode","styles","container","props","navigation","navigate","inputDrinkName","m","onInvModalSave","bind","onBlkModalSave","flexDirection","justifyContent","alignItems","fontSize","fontWeight","fontFamily","color","normalText","flexWrap","paddingLeft","aspectRatio","require","margin","Component","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport BottomBlueBUtton from 'components/BottomBlueButton';\nimport InputUpdateInventoryModal from 'components/InputUpdateInventoryModal';\nimport InputBlankInventoryModal from 'components/InputBlankInventoryModal';\nimport { globalInventory } from 'model/Inventory';\nimport { globalEvent } from 'model/Event';\nimport { dbManager } from '../model/DBManager';\n\n\nexport default class TotalInventory extends React.Component {\n\tstate = {\n        inputInvUpdateModalVisible: false,\n\t\tinputBlkUpdateModalVisible: false,\n\t\tselectedDrink: 0,\n\t\tdrinks: [],\n\t\tpercentage: 0,\n\t\ttotalValue: 0.00,\n\t\ttotalUnits: 0,\n\t\tinventoryId: null,\n\t};\n\n\tonInvModalSave(drink) {\n\t\tvar newDrinks = this.state.drinks;\n\t\tnewDrinks[this.state.selectedDrink] = drink;\n\t\tconsole.log(drink);\n\t\tthis.setState({\n\t\t\tinputInvUpdateModalVisible: false,\n\t\t\tdrinks: newDrinks\n\t\t});\n\t\tglobalInventory.updateDrink(drink).then(r => this.updateData());\n\t}\n\n\tonBlkModalSave(drink) {\n\t\t// upload image here\n\t\t// create a new drinkType here\n\t\t//let url = dbManager.uploadImage(this.state.inventoryId, drink.drinkType.icon);\n\t\t//drink.drinkType.icon = url;\n\t\tconsole.log(\"Icon: \", drink.drinkType.icon);\n\t\t//dbManager.uploadImage(globalEvent.id, drink.drinkType.icon)\n\n\t\tlet newDrinks = this.state.drinks\n\t\tnewDrinks.push(drink);\n\n\t\tthis.setState({\n\t\t\tinputBlkUpdateModalVisible: false,\n\t\t\tdrinks: newDrinks\n\t\t});\n\n\t\tconsole.log(\"OK\\n\");\n\t\tglobalInventory.addDrinkType(drink).then(r => {\n\t\t\tconsole.log(\"Return value:\", r[0].id);\n\t\t\tlet newDrink = {typeId: r[0].id, ...drink};\n\t\t\tconsole.log(\"Type: \", newDrink.typeId);\n\t\t\tglobalInventory.addDrink(newDrink).catch(e => console.log(e));\n\t\t\tthis.updateData();\n\t\t}).catch(e => console.log(e));\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateData();\n\t}\n\n\tupdateData() {\n\t\tvar [quantity, value] = globalInventory.getTotalInventory();\n\t\tconsole.log(globalInventory.drinks);\n\t\tthis.setState({\n\t\t\tdrinks: globalInventory.drinks,\n\t\t\tpercentage: quantity > 0 ? 100 : 0,\n\t\t\ttotalValue: value,\n\t\t\ttotalUnits: quantity,\n\t\t\tinventoryId: globalInventory.id,\n\t\t\teventId: globalEvent.id\n\t\t});\n\t}\n\n\trender() {\n\t\tvar drinkList = this.state.drinks.map((item, index) => {\n\t\t\treturn (\n\t\t\t\t<ShadowedBox key={index} width={'30%'} square margin={5}>\n\t\t\t\t\t<TouchableOpacity key={item.name} onPress={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tinputInvUpdateModalVisible: true,\n\t\t\t\t\t\t\tselectedDrink: index\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.inputUpdateInventoryModal.inputDrink(this.state.drinks[index]);\t\t\t\t\t\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\tsource={{uri: item.icon}}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\t\theight: 100,\n\t\t\t\t\t\t\t\tborderRadius: 15,\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\tresizeMode: 'contain'\n\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</ShadowedBox>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<View style={styles.container}>\n\t\t\t\t<BottomBlueBUtton text={\"Complete Inventory and Add Stations\"}\n\t\t\t\t\tonPress={() => this.props.navigation.navigate('Assign Inventory Create Station')} />\n\t\t\t\t<InputUpdateInventoryModal\n\t\t\t\t\tkey={this.state.inputDrinkName}\n\t\t\t\t\tref={m => {this.inputUpdateInventoryModal = m}}\n\t\t\t\t\tvisible={this.state.inputInvUpdateModalVisible} \n\t\t\t\t\tonSave={this.onInvModalSave.bind(this)}>\n\t\t\t\t</InputUpdateInventoryModal>\n\t\t\t\t<InputBlankInventoryModal\n\t\t\t\t\tvisible={this.state.inputBlkUpdateModalVisible}\n\t\t\t\t\tonSave={this.onBlkModalSave.bind(this)}\n\t\t\t\t>\n\t\t\t\t</InputBlankInventoryModal>\n\t\t\t\t<ShadowedBox width={'80%'} height={'20%'} margin={10}>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: '90%',\n\t\t\t\t\t\theight: '40%',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={{fontSize: 20, fontWeight: 'bold', fontFamily: 'Arial'}}>\n\t\t\t\t\t\t\tTotal Inventory:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={{fontSize: 30, color: 'red'}}>{this.state.percentage}%</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: '90%',\n\t\t\t\t\t\theight: '40%',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Text style={styles.normalText}>Total Inventory Value:</Text>\n\t\t\t\t\t\t\t<Text style={styles.normalText}>${this.state.totalValue}</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Text style={styles.normalText}>Total Units:</Text>\n\t\t\t\t\t\t\t<Text style={styles.normalText}>{this.state.totalUnits} of {this.state.totalUnits}</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</ShadowedBox>\n\t\t\t\t<View style={{\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tpaddingLeft: '2%'\n\t\t\t\t}}>\n\t\t\t\t\t{drinkList}\n\t\t\t\t\t<ShadowedBox width={'30%'} square margin={5}>\n\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\taspectRatio: 1,\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\tjustifyContent: 'center'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => {\n\t\t\t\t\t\t\t\tthis.setState({inputBlkUpdateModalVisible: true});\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsource={require('assets/add.png')}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: 40,\n\t\t\t\t\t\t\t\t\t\theight: 40,\n\t\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t\t\tresizeMode: 'contain',\n\t\t\t\t\t\t\t\t\t\tmargin: 15\n\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Text> Add Item </Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</ShadowedBox>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f2f2f2',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\tnormalText: {\n\t\tfontSize: 17,\n\t\tfontFamily: 'Arial'\n\t}\n});"]},"metadata":{},"sourceType":"module"}