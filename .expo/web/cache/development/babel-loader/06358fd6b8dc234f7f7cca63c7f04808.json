{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ManagerPendingInventoryScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport ConfirmInventoryModal from 'components/ConfirmInventoryModal';\nimport Station from 'model/Station';\nimport Event, { globalEvent } from 'model/Event';\nimport { globalInventory } from 'model/Inventory';\nimport Manager from 'model/Manager';\nimport Job from 'model/Job';\nexport default function ManagerPendingInventoryScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      confirmInventoryModal = _useState2[0],\n      setConfirmInventoryModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmInventoryModalVisible = _useState4[0],\n      setConfirmInventoryModalVisible = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskSelected = _useState6[0],\n      setTaskSelected = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      taskIndexSelected = _useState8[0],\n      setTaskIndexSelected = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isRunnerSelected = _useState10[0],\n      setIsRunnerSelected = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      JobList = _useState12[0],\n      setJobList = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      pairItems = _useState14[0],\n      setPairItems = _useState14[1];\n\n  useEffect(function () {\n    var JobList = Job.getJobs();\n    setJobList(JobList);\n    var pairItems = globalInventory.pairItems;\n    setPairItems(pairItems);\n  }, []);\n\n  var filterStation = function filterStation() {\n    var StationJobList = [];\n    JobList.map(function (item) {\n      if (item.status == \"Complete\") {\n        StationJobList.push(item);\n      }\n    });\n    return StationJobList;\n  };\n\n  var filterRunner = function filterRunner() {\n    var StationJobList = [];\n    JobList.map(function (item) {\n      if (item.status == \"Unstarted\" || item.status == \"In transit\") {\n        StationJobList.push(item);\n      }\n    });\n    return StationJobList;\n  };\n\n  var runnerJobs = filterRunner();\n\n  var onConfirmInvModalSave = function onConfirmInvModalSave(drink) {\n    if (drink == null) {\n      setConfirmInventoryModalVisible(false);\n      return;\n    }\n\n    var curTask = taskSelected;\n    var curStatus = \"\";\n\n    if (taskSelected.status === \"Completed\") {\n      curStatus = \"Confirmed\";\n    } else {\n      curStatus = taskSelected.status;\n    }\n\n    Job.updateJob(drink, taskSelected.type === \"Return\" ? taskSelected.from : taskSelected.to, curStatus, null);\n    curTask.drink = drink;\n\n    if (isRunnerSelected) {\n      runnerJobs[taskIndexSelected] = curTask;\n    } else {\n      StationJobsList[taskIndexSelected] = curTask;\n    }\n\n    setConfirmInventoryModalVisible(false);\n  };\n\n  var runnerList = runnerJobs.map(function (item, index) {\n    return React.createElement(ShadowedBox, {\n      width: '40%',\n      height: 100,\n      key: index,\n      margin: 5,\n      touchable: true,\n      onPress: function onPress() {\n        setConfirmInventoryModalVisible(true);\n        setTaskSelected(runnerJobs[index]);\n        setTaskIndexSelected(index);\n        setIsRunnerSelected(true);\n        confirmInventoryModal.inputDrinkAndStation(runnerJobs[index].drink, runnerJobs[index].type === \"Return\" ? runnerJobs[index].from : runnerJobs[index].to, pairItems);\n        confirmInventoryModal.inputJobType(runnerJobs[index].type);\n        confirmInventoryModal.inputStatus(runnerJobs[index].status);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        margin: 3,\n        height: '90%',\n        width: '90%',\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.sectionTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: _objectSpread(_objectSpread({}, styles.rowView), {}, {\n        width: '90%'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 8\n      }\n    }, item.runner, \":\"), React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }\n    }, item.item < 16 ? \"\" + item.item : item.item.substring(0, 15) + \"...\"))), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, \"Pick Up:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, item.from), React.createElement(Text, {\n      style: [item.status != \"Unstarted\" ? styles.completedText : styles.pendingText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, item.status != \"Unstarted\" ? \"Complete\" : \"Pending\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, \"Drop off:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, item.to), React.createElement(Text, {\n      style: [item.status != \"Unstarted\" ? item.status != \"In transit\" ? styles.completedText : styles.pendingText : styles.pendingText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, item.status != \"Unstarted\" ? item.status != \"In transit\" ? \"Complete\" : \"Pending\" : \"Pending\"))));\n  });\n  var StationJobsList = filterStation();\n  var stationList = StationJobsList.map(function (item, index) {\n    return React.createElement(ShadowedBox, {\n      width: '40%',\n      height: 100,\n      key: index,\n      margin: 5,\n      touchable: true,\n      onPress: function onPress() {\n        setConfirmInventoryModalVisible(true);\n        setTaskSelected(StationJobsList[index]);\n        setTaskIndexSelected(index);\n        setIsRunnerSelected(false);\n        console.log(StationJobsList[index]);\n        confirmInventoryModal.inputDrinkAndStation(StationJobsList[index].drink, StationJobsList[index].type === \"Return\" ? StationJobsList[index].from : StationJobsList[index].to, pairItems);\n        confirmInventoryModal.inputStatus(StationJobsList[index].status);\n        confirmInventoryModal.inputJobType(StationJobsList[index].type);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        margin: 3,\n        height: '90%',\n        width: '90%',\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.sectionTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: _objectSpread(_objectSpread({}, styles.rowView), {}, {\n        width: '90%'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 8\n      }\n    }, item.to, \":\"), React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 8\n      }\n    }, item.item < 16 ? \"\" + item.item : item.item.substring(0, 15) + \"...\"))), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, \"Drop off:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, item.to), React.createElement(Text, {\n      style: [styles.completedText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, \"Complete\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, \"Confirmed:\")), React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 10,\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }\n    }, item.to), React.createElement(Text, {\n      style: [item.status == \"Confirmed\" ? styles.completedText : styles.pendingText],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, item.status == \"Confirmed\" ? \"Complete\" : \"Pending\"))));\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 3\n    }\n  }, React.createElement(ConfirmInventoryModal, {\n    ref: function ref(m) {\n      setConfirmInventoryModal(m);\n    },\n    managerMode: true,\n    serverMode: true,\n    visible: confirmInventoryModalVisible,\n    onSave: function onSave(drink) {\n      return onConfirmInvModalSave(drink);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 4\n    }\n  }), React.createElement(ShadowedBox, {\n    width: '80%',\n    height: '10%',\n    margin: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      marginVertical: 20,\n      width: '100%',\n      height: '100%',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      margin: 4,\n      marginLeft: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 6\n    }\n  }, \"Pending Inventory:\"))), React.createElement(View, {\n    style: {\n      flexWrap: 'wrap',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      width: '100%',\n      paddingLeft: '2%',\n      marginLeft: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 4\n    }\n  }, runnerList), React.createElement(View, {\n    style: {\n      flexWrap: 'wrap',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      width: '100%',\n      paddingLeft: '2%',\n      marginLeft: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 4\n    }\n  }, stationList));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  normalText: {\n    fontSize: 17,\n    fontFamily: 'Arial'\n  },\n  sectionTitle: {\n    color: \"lightgrey\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    borderBottomColor: \"grey\",\n    borderBottomWidth: 1,\n    width: \"100%\"\n  },\n  rowView: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 2\n  },\n  percentageSmallboxTextSize: {\n    fontSize: 16\n  },\n  maxCapacityText: {\n    color: 'dodgerblue'\n  },\n  sixtyText: {\n    color: 'limegreen'\n  },\n  thirtyText: {\n    color: 'darkkhaki'\n  },\n  criticalText: {\n    color: 'red'\n  },\n  completedText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'green'\n  },\n  pendingText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'gold'\n  },\n  percentageHeaderBoxTextSize: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    fontFamily: 'Arial'\n  },\n  HeaderBoxTextSize: {\n    fontSize: 6\n  },\n  Boundingbox: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: \"dodgerblue\",\n    borderBottomColor: \"dodgerblue\",\n    borderBottomWidth: 1,\n    borderTopColor: \"dodgerblue\",\n    borderTopWidth: 1,\n    borderLeftColor: \"dodgerblue\",\n    borderLeftWidth: 1,\n    borderRightColor: \"dodgerblue\",\n    borderRightWidth: 1,\n    width: \"100%\"\n  },\n  rowViewclose: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    padding: 2\n  },\n  rowViewnormal: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 2\n  }\n});","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ManagerPendingInventoryScreen.js"],"names":["React","useState","useEffect","ShadowedBox","ConfirmInventoryModal","Station","Event","globalEvent","globalInventory","Manager","Job","ManagerPendingInventoryScreen","navigation","confirmInventoryModal","setConfirmInventoryModal","confirmInventoryModalVisible","setConfirmInventoryModalVisible","taskSelected","setTaskSelected","taskIndexSelected","setTaskIndexSelected","isRunnerSelected","setIsRunnerSelected","JobList","setJobList","pairItems","setPairItems","getJobs","filterStation","StationJobList","map","item","status","push","filterRunner","runnerJobs","onConfirmInvModalSave","drink","curTask","curStatus","updateJob","type","from","to","StationJobsList","runnerList","index","inputDrinkAndStation","inputJobType","inputStatus","flexDirection","margin","height","width","alignItems","styles","sectionTitle","rowView","fontSize","fontWeight","color","justifyContent","runner","substring","completedText","pendingText","stationList","console","log","container","m","marginVertical","marginLeft","flexWrap","paddingLeft","StyleSheet","create","flex","backgroundColor","normalText","fontFamily","textAlign","borderBottomColor","borderBottomWidth","padding","percentageSmallboxTextSize","maxCapacityText","sixtyText","thirtyText","criticalText","percentageHeaderBoxTextSize","HeaderBoxTextSize","Boundingbox","borderTopColor","borderTopWidth","borderLeftColor","borderLeftWidth","borderRightColor","borderRightWidth","rowViewclose","rowViewnormal"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport ConfirmInventoryModal from 'components/ConfirmInventoryModal';\nimport Station from 'model/Station';\nimport Event, { globalEvent } from 'model/Event';\nimport { globalInventory } from 'model/Inventory';\nimport Manager from 'model/Manager';\nimport Job from 'model/Job';\n\nexport default function ManagerPendingInventoryScreen({ navigation }) {\n\tconst [confirmInventoryModal, setConfirmInventoryModal] = useState(false);\n\tconst [confirmInventoryModalVisible, setConfirmInventoryModalVisible] = useState(false);\n\tconst [taskSelected, setTaskSelected] = useState(null);\n\tconst [taskIndexSelected, setTaskIndexSelected] = useState(0);\n\tconst [isRunnerSelected, setIsRunnerSelected] = useState(false);\n\tconst [JobList, setJobList] = useState([]);\n\tconst [pairItems, setPairItems] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst JobList = Job.getJobs()\n\t\tsetJobList(JobList);\n\n\t\tconst pairItems = globalInventory.pairItems;\n\t\tsetPairItems(pairItems);\n\t}, [])\n\n\t//console.log(JobList)\n\n\n\tconst filterStation = () => {\n\t\tlet StationJobList = []\n\t\tJobList.map(item => {\n\t\t\tif(item.status == \"Complete\"){\n\t\t\t\tStationJobList.push(item)\n\t\t\t}\n\t\t});\n\t\treturn StationJobList\n\t}\n\n\tconst filterRunner = () => {\n\t\tlet StationJobList = []\n\t\tJobList.map(item => {\n\t\t\tif(item.status == \"Unstarted\" || item.status == \"In transit\"){\n\t\t\t\tStationJobList.push(item)\n\t\t\t}\n\t\t});\n\t\treturn StationJobList\n\t}\n\n\tconst runnerJobs = filterRunner()\n\n\tconst onConfirmInvModalSave = (drink) => {\n\t\tif (drink == null) {\n\t\t\tsetConfirmInventoryModalVisible(false);\n\t\t\treturn;\n\t\t}\n\t\tconst curTask = taskSelected;\n\t\tlet curStatus = \"\";\n\t\tif (taskSelected.status === \"Completed\") {\n\t\t\tcurStatus = \"Confirmed\";\n\t\t} else {\n\t\t\tcurStatus = taskSelected.status;\n\t\t}\n\t\tJob.updateJob(drink, taskSelected.type === \"Return\" ? taskSelected.from : taskSelected.to, curStatus, null);\n\t\tcurTask.drink = drink;\n\t\tif (isRunnerSelected) {\n\t\t\trunnerJobs[taskIndexSelected] = curTask;\n\t\t} else {\n\t\t\tStationJobsList[taskIndexSelected] = curTask;\n\t\t}\n\t\tsetConfirmInventoryModalVisible(false);\n\t}\n\n\tconst runnerList = runnerJobs.map((item, index) => {\n\t\treturn (\n\t\t\t<ShadowedBox width={'40%'} height={100} key={index} margin={5} touchable onPress={() => {\n\t\t\t\tsetConfirmInventoryModalVisible(true);\n\t\t\t\tsetTaskSelected(runnerJobs[index]);\n\t\t\t\tsetTaskIndexSelected(index);\n\t\t\t\tsetIsRunnerSelected(true);\n\t\t\t\tconfirmInventoryModal.inputDrinkAndStation(\n\t\t\t\t\trunnerJobs[index].drink, \n\t\t\t\t\trunnerJobs[index].type === \"Return\" ? runnerJobs[index].from : runnerJobs[index].to,\n\t\t\t\t\tpairItems\n\t\t\t\t);\n\t\t\t\tconfirmInventoryModal.inputJobType(runnerJobs[index].type);\n\t\t\t\tconfirmInventoryModal.inputStatus(runnerJobs[index].status);\n\t\t\t}}>\n\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tmargin: 3,\n\t\t\t\t\theight: '90%',\n\t\t\t\t\twidth: '90%',\n\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t//borderWidth: 1,\n\t\t\t\t}}>\n\n\t\t\t\t\t<View style={styles.sectionTitle}>\n\t\t\t\t\t\t<View style={{...styles.rowView, width:'90%'}}>\n\t\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t{item.runner}:\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\tfontSize: 10, \n\t\t\t\t\t\t\t\tcolor: 'gray', \n\t\t\t\t\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\t\t\t\t}}> \n\t\t\t\t\t\t\t\t{item.item < 16\n                \t\t\t\t\t? `${item.item}`\n                \t\t\t\t\t: `${item.item.substring(0, 15)}...`}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t\t\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tPick Up:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.from}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[item.status != \"Unstarted\"?styles.completedText : styles.pendingText]}>\n\t\t\t\t\t\t\t\t{item.status != \"Unstarted\"? \"Complete\":\"Pending\"}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tDrop off:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.to}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[item.status != \"Unstarted\"? \n\t\t\t\t\t\t\titem.status != \"In transit\"? \n\t\t\t\t\t\t\t\tstyles.completedText \n\t\t\t\t\t\t\t\t: styles.pendingText \n\t\t\t\t\t\t\t: styles.pendingText]}>\n\t\t\t\t\t\t\t\t{item.status != \"Unstarted\"? \n\t\t\t\t\t\t\titem.status != \"In transit\"? \n\t\t\t\t\t\t\t\t\"Complete\" \n\t\t\t\t\t\t\t\t: \"Pending\" \n\t\t\t\t\t\t\t: \"Pending\"}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\n\n\t\t\t</ShadowedBox>\n\t\t);\n\t});\n\n\tconst StationJobsList = filterStation()\n\t//console.log(StationJobsList)\n\n\tconst stationList = StationJobsList.map((item, index) => {\n\t\treturn (\n\t\t\t<ShadowedBox width={'40%'} height={100} key={index} margin={5} touchable onPress={() => {\n\t\t\t\tsetConfirmInventoryModalVisible(true);\n\t\t\t\tsetTaskSelected(StationJobsList[index]);\n\t\t\t\tsetTaskIndexSelected(index);\n\t\t\t\tsetIsRunnerSelected(false);\n\t\t\t\tconsole.log(StationJobsList[index]);\n\t\t\t\tconfirmInventoryModal.inputDrinkAndStation(\n\t\t\t\t\tStationJobsList[index].drink, \n\t\t\t\t\tStationJobsList[index].type === \"Return\" ? StationJobsList[index].from : StationJobsList[index].to,\n\t\t\t\t\tpairItems\n\t\t\t\t);\n\t\t\t\tconfirmInventoryModal.inputStatus(StationJobsList[index].status);\n\t\t\t\tconfirmInventoryModal.inputJobType(StationJobsList[index].type);\n\t\t\t}}>\n\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tmargin: 3,\n\t\t\t\t\theight: '90%',\n\t\t\t\t\twidth: '90%',\n\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t//borderWidth: 1,\n\t\t\t\t}}>\n\n\t\t\t\t\t<View style={styles.sectionTitle}>\n\t\t\t\t\t\t<View style={{...styles.rowView, width:'90%'}}>\n\t\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t{item.to}:\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t\t{item.item < 16\n                \t\t\t\t\t? `${item.item}`\n                \t\t\t\t\t: `${item.item.substring(0, 15)}...`}\t\t\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t\t\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tDrop off:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.to}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[styles.completedText]}>\n\t\t\t\t\t\t\tComplete\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\tConfirmed:\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t\t<Text style={{fontSize: 10, color: 'gray', justifyContent: 'flex-start'}}> \n\t\t\t\t\t\t\t{item.to}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text style={[item.status == \"Confirmed\"? styles.completedText:styles.pendingText]}>\n\t\t\t\t\t\t\t\t{item.status == \"Confirmed\"? \"Complete\":\"Pending\"}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</ShadowedBox>\n\t\t);\n\t});\n\n\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ConfirmInventoryModal\n\t\t\t\tref={m => {setConfirmInventoryModal(m)}}\n\t\t\t\tmanagerMode={true}\n\t\t\t\tserverMode={true}\n\t\t\t\tvisible={confirmInventoryModalVisible}\n\t\t\t\tonSave={(drink) => onConfirmInvModalSave(drink)}\n\t\t\t/>\n\t\t\t<ShadowedBox width={'80%'} height={'10%'} margin={10}>\n\t\t\t\t<View style={{\n\t\t\t\t\t\tmarginVertical: 20,\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t\tmargin: 10\n\t\t\t\t}}>\n\t\t\t\t\t<Text style={{fontSize: 16, fontWeight:\"bold\", margin:4, marginLeft:12}}>Pending Inventory:</Text>\n\t\t\t\t</View>\n\t\t\t</ShadowedBox>\n\t\t\t<View style={{\n\t\t\t\tflexWrap: 'wrap',\n\t\t\t\tflexDirection: 'row',\n\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\twidth: '100%',\n\t\t\t\t//height: '60%',\n\t\t\t\tpaddingLeft: '2%',\n\t\t\t\tmarginLeft:50,\n\t\t\t}}>\n\t\t\t\t{runnerList}\n\t\t\t</View>\n\t\t\t<View style={{\n\t\t\t\tflexWrap: 'wrap',\n\t\t\t\tflexDirection: 'row',\n\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\twidth: '100%',\n\t\t\t\t//height: '60%',\n\t\t\t\tpaddingLeft: '2%',\n\t\t\t\tmarginLeft:50,\n\t\t\t}}>\n\t\t\t\t{stationList}\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f2f2f2',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\tnormalText: {\n\t\tfontSize: 17,\n\t\tfontFamily: 'Arial'\n\t},\n    sectionTitle: {\n        color: \"lightgrey\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n\t\ttextAlign: \"left\",\n        borderBottomColor: \"grey\",\n        borderBottomWidth: 1,\n        width: \"100%\"\n    },\n\trowView: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: 2\n\t},\n\tpercentageSmallboxTextSize: {\n\t\tfontSize: 16, \n    },\n\n\tmaxCapacityText: {\n        color: 'dodgerblue'\n    },\n    sixtyText: {\n        color: 'limegreen'\n    },\n    thirtyText: {\n        color: 'darkkhaki'\n\t},\n\tcriticalText: {\n        color: 'red'\n\t},\n\tcompletedText:{\n\t\tfontSize: 10, \n\t\tfontWeight: 'bold', \n\t\tcolor: 'green'\n\t},\n\tpendingText:{\n\t\tfontSize: 10, \n\t\tfontWeight: 'bold', \n\t\tcolor: 'gold'\n\t},\n\tpercentageHeaderBoxTextSize: {\n\t\tfontSize: 20,  \n\t\tfontWeight: 'bold', \n\t\tfontFamily: 'Arial'\n\t},\n\tHeaderBoxTextSize: {\n\t\tfontSize: 6,  \n\t},\n\tBoundingbox:{\n\t\tfontSize: 20, \n\t\tfontWeight: 'bold',  \n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tcolor: \"dodgerblue\",\n        borderBottomColor: \"dodgerblue\",\n\t\tborderBottomWidth: 1,\n\t\tborderTopColor: \"dodgerblue\",\n\t\tborderTopWidth: 1,\n\t\tborderLeftColor: \"dodgerblue\",\n\t\tborderLeftWidth: 1,\n\t\tborderRightColor: \"dodgerblue\",\n\t\tborderRightWidth: 1,\n        width: \"100%\"\n\t},\n\trowViewclose: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        padding: 2\n\t},\n\trowViewnormal: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: 2\n    },\n});"]},"metadata":{},"sourceType":"module"}