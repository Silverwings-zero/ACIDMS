{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ManagerAvailableInventoryScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport ConfirmInventoryModal from 'components/ConfirmInventoryModal';\nimport InputBlankInventoryModal from 'components/InputBlankInventoryModal';\nimport ShadowedBox from 'components/ShadowedBox';\nimport Station from 'model/Station';\nimport Event, { globalEvent } from 'model/Event';\nimport Manager from 'model/Manager';\nimport Job from 'model/Job';\nimport Inventory from 'model/Inventory';\nexport default function ManagerAvailableInventoryScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      additionalInventoryModal = _useState2[0],\n      setAdditionalInventoryModal = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageSelected = _useState4[0],\n      setImageSelected = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      drinkSelected = _useState6[0],\n      setDrinkSelected = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stations = _useState8[0],\n      setStations = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputBlkUpdateModalVisible = _useState10[0],\n      setInputBlkUpdateModalVisible = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      manager = _useState12[0],\n      setManager = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      drinkList = _useState14[0],\n      setdrinkList = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      inventorySummary = _useState16[0],\n      setinventorySummary = _useState16[1];\n\n  useEffect(function () {\n    var drinkList = Inventory.getDrinksSummary();\n    setdrinkList(drinkList);\n    var inventorySummary = Inventory.getInventorySummary();\n    setinventorySummary(inventorySummary);\n  }, []);\n\n  var _Station$getTotalAvai = Station.getTotalAvailableInventoryData(),\n      _Station$getTotalAvai2 = _slicedToArray(_Station$getTotalAvai, 3),\n      availItems = _Station$getTotalAvai2[0],\n      soldItems = _Station$getTotalAvai2[1],\n      totalItems = _Station$getTotalAvai2[2];\n\n  var textColor = function textColor(text) {\n    var rate = Number(text);\n\n    if (rate < 26) {\n      return '#F71E0C';\n    } else if (rate < 70) {\n      return '#E8BD38';\n    }\n\n    return '#1CD338';\n  };\n\n  var total = function total(text) {\n    var res = 0;\n\n    if (text == 'total') {\n      totalItems.map(function (num) {\n        return res += num;\n      });\n    } else if (text == 'avail') {\n      availItems.map(function (item) {\n        return res += item.avail;\n      });\n    } else if (text == 'sold') {\n      soldItems.map(function (station) {\n        station.sold.map(function (item) {\n          return res += item.sold;\n        });\n      });\n    } else {\n      soldItems.map(function (station) {\n        if (station.stationKey == text) {\n          station.sold.map(function (item) {\n            return res += item.sold;\n          });\n        }\n      });\n    }\n\n    return res;\n  };\n\n  var percent = function percent(a, b) {\n    if (Number(b) == 0) {\n      return 0;\n    }\n\n    return Math.round(a * 100 / b);\n  };\n\n  var formatNum = function formatNum(num) {\n    if (num != null) {\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n  };\n\n  var iconList = drinkList.map(function (item, index) {\n    return React.createElement(ShadowedBox, {\n      key: index,\n      width: '43%',\n      square: true,\n      margin: 5,\n      touchable: true,\n      onPress: function onPress() {\n        setImageSelected({\n          uri: item.icon\n        });\n        setDrinkSelected(item.name);\n        setAdditionalInventoryModal(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        margin: 3,\n        height: '80%',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: item.icon\n      },\n      style: {\n        width: '60%',\n        height: '100%',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        borderRadius: 15,\n        overflow: 'hidden',\n        resizeMode: 'contain',\n        marginHorizontal: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    }), React.createElement(View, {\n      style: {\n        width: '40%',\n        height: '50%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 7.5,\n        fontWeight: 'bold',\n        color: 'gray',\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, \" \", item.name), React.createElement(View, {\n      style: _objectSpread(_objectSpread({}, styles.sectionTitle), {}, {\n        justifyContent: 'center',\n        alignItems: 'center'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.percentageSmallboxTextSize), {}, {\n        color: textColor(percent(item.avail, item.total))\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 8\n      }\n    }, percent(item.avail, item.total), \"%\")), React.createElement(Text, {\n      style: {\n        fontSize: 6,\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, \" \", item.avail, \" of \", item.total))));\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 3\n    }\n  }, React.createElement(InputBlankInventoryModal, {\n    visible: inputBlkUpdateModalVisible,\n    onSave: function onSave() {\n      return setInputBlkUpdateModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }\n  }), React.createElement(ConfirmInventoryModal, {\n    sourceImg: imageSelected,\n    drinkName: drinkSelected,\n    pairedItems: [\"12 ounce cup\"],\n    visible: additionalInventoryModal,\n    onSave: function onSave() {\n      return setAdditionalInventoryModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }), React.createElement(ShadowedBox, {\n    width: '80%',\n    height: '15%',\n    margin: 10,\n    touchable: true,\n    onPress: function onPress() {\n      return navigation.navigate('Manager Available Inventory Detailed Data List');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.rowView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      fontWeight: \"bold\",\n      margin: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 6\n    }\n  }, \"Available Inventory:\"), React.createElement(View, {\n    style: {\n      width: '30%',\n      height: '80%',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: 20,\n      color: 'dodgerblue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.percentageHeaderBoxTextSize), {}, {\n      color: textColor(percent(inventorySummary[0], inventorySummary[1]))\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, percent(inventorySummary[0], inventorySummary[1]), \"%\")))), React.createElement(View, {\n    style: {\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: '100%',\n      maxHeight: '100%',\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexWrap: 'wrap',\n      flexDirection: 'row',\n      width: '100%',\n      paddingLeft: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 6\n    }\n  }, iconList, React.createElement(ShadowedBox, {\n    width: '43%',\n    square: true,\n    margin: 5,\n    touchable: true,\n    onPress: function onPress() {\n      return setInputBlkUpdateModalVisible(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      aspectRatio: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 8\n    }\n  }, React.createElement(Image, {\n    source: require('assets/add.png'),\n    style: {\n      width: '40%',\n      height: '40%',\n      overflow: 'hidden',\n      resizeMode: 'contain',\n      margin: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 10\n    }\n  }, \"Add Item\")))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  normalText: {\n    fontSize: 17,\n    fontFamily: 'Arial'\n  },\n  sectionTitle: {\n    color: \"lightgrey\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    borderBottomColor: \"grey\",\n    borderBottomWidth: 1,\n    width: \"100%\"\n  },\n  rowView: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 2\n  },\n  percentageSmallboxTextSize: {\n    fontSize: 16\n  },\n  maxCapacityText: {\n    color: 'dodgerblue'\n  },\n  sixtyText: {\n    color: 'limegreen'\n  },\n  thirtyText: {\n    color: 'darkkhaki'\n  },\n  criticalText: {\n    color: 'red'\n  },\n  percentageHeaderBoxTextSize: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    fontFamily: 'Arial'\n  },\n  HeaderBoxTextSize: {\n    fontSize: 13\n  }\n});","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ManagerAvailableInventoryScreen.js"],"names":["React","useState","useEffect","ScrollView","ConfirmInventoryModal","InputBlankInventoryModal","ShadowedBox","Station","Event","globalEvent","Manager","Job","Inventory","ManagerAvailableInventoryScreen","navigation","additionalInventoryModal","setAdditionalInventoryModal","imageSelected","setImageSelected","drinkSelected","setDrinkSelected","stations","setStations","inputBlkUpdateModalVisible","setInputBlkUpdateModalVisible","manager","setManager","drinkList","setdrinkList","inventorySummary","setinventorySummary","getDrinksSummary","getInventorySummary","getTotalAvailableInventoryData","availItems","soldItems","totalItems","textColor","text","rate","Number","total","res","map","num","item","avail","station","sold","stationKey","percent","a","b","Math","round","formatNum","toString","replace","iconList","index","uri","icon","name","flexDirection","margin","height","alignItems","width","justifyContent","borderRadius","overflow","resizeMode","marginHorizontal","fontSize","fontWeight","color","styles","sectionTitle","percentageSmallboxTextSize","container","navigate","rowView","marginRight","percentageHeaderBoxTextSize","maxHeight","marginLeft","flexWrap","paddingLeft","aspectRatio","require","StyleSheet","create","flex","backgroundColor","normalText","fontFamily","textAlign","borderBottomColor","borderBottomWidth","padding","maxCapacityText","sixtyText","thirtyText","criticalText","HeaderBoxTextSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport ConfirmInventoryModal from 'components/ConfirmInventoryModal';\nimport InputBlankInventoryModal from 'components/InputBlankInventoryModal';\nimport ShadowedBox from 'components/ShadowedBox';\nimport Station from 'model/Station';\nimport Event, { globalEvent } from 'model/Event';\nimport Manager from 'model/Manager';\nimport Job from 'model/Job';\nimport Inventory from 'model/Inventory';\n\n\nexport default function ManagerAvailableInventoryScreen({ navigation }) {\n\tconst [additionalInventoryModal, setAdditionalInventoryModal] = useState(false);\n\tconst [imageSelected, setImageSelected] = useState(null);\n\tconst [drinkSelected, setDrinkSelected] = useState(null);\n\tconst [stations, setStations] = useState([]);\n\tconst [inputBlkUpdateModalVisible, setInputBlkUpdateModalVisible] = useState(false);\n\t//const [availItems, setAvail] = useState([]);\n\t//const [soldItems, setSold] = useState([]);\n\t//const [totalItems, setTotal] = useState([]);\n\tconst [manager, setManager] = useState([]);\n\tconst [drinkList, setdrinkList] = useState([]);\n\tconst [inventorySummary, setinventorySummary] = useState([]);\n\n\t\n\n\tuseEffect(() => {\n\t\t// print out list of drinks in Inventory which has field{icon, name, total, available}\n\t\t//console.log(Inventory.getDrinksSummary())\n\t\tvar drinkList = Inventory.getDrinksSummary();\n\t\tsetdrinkList(drinkList);\n\t\tvar inventorySummary = Inventory.getInventorySummary();\n\t\tsetinventorySummary(inventorySummary);\n\t}, [])\n\t\n\tconst [availItems,soldItems,totalItems] = Station.getTotalAvailableInventoryData()\n\t//console.log(availItems)\n\t\n\n\t\n\n\tconst textColor = (text) => {\n\t\tlet rate = Number(text);\n        if (rate < 26) {\n\t\t\treturn '#F71E0C';\n\t\t} else if (rate < 70) {\n\t\t\treturn '#E8BD38';\n\t\t}\n        return '#1CD338';\n\t}\n\n\tconst total = (text) => {\n\t\tlet res = 0;\n\t\tif (text == 'total') {\n\t\t\ttotalItems.map(num => res += num);\n\t\t} else if (text == 'avail') {\n\t\t\tavailItems.map(item => res += item.avail);\n\t\t} else if (text == 'sold') {\n\t\t\tsoldItems.map(station => {\n\t\t\t\tstation.sold.map(item => res += item.sold);\n\t\t\t});\n\t\t} else {\n\t\t\tsoldItems.map(station => {\n\t\t\t\tif (station.stationKey == text) {\n\t\t\t\t\tstation.sold.map(item => res += item.sold);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn res;\n\t}\n\n\tconst percent = (a, b) => {\n\t\tif (Number(b) == 0) {\n\t\t\treturn 0\n\t\t}\n\t\treturn  Math.round(a * 100 / b);\n\t}\n\n\tconst formatNum = (num) => {\n\t\tif (num != null) {\n\t\t\treturn num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\t\t}\n\t}\n\n\t\n\n\tconst iconList = drinkList.map((item, index) => {\n\t\treturn (\n\t\t\t<ShadowedBox \n\t\t\t\tkey={index}\n\t\t\t\twidth={'43%'}  \n\t\t\t\tsquare \n\t\t\t\tmargin={5}\n                touchable\n\t\t\t\tonPress={() => {\n\t\t\t\t\tsetImageSelected({uri: item.icon});\n\t\t\t\t\tsetDrinkSelected(item.name);\n\t\t\t\t\tsetAdditionalInventoryModal(true);\n\t\t\t\t}}>\n\n\t\t\t\t<View style={{\n\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\tmargin: 3,\n\t\t\t\t\theight: '80%',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t// borderWidth: 1,\n\t\t\t\t}}>\n\n\t\t\t\t\t<Image \n\t\t\t\t\t\tsource={{uri: item.icon}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '60%',\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\t\t\t\talignItems: 'flex-start',\n\t\t\t\t\t\t\tborderRadius: 15,\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tresizeMode: 'contain',\n\t\t\t\t\t\t\tmarginHorizontal: 2\n\t\t\t\t\t\t\t// borderWidth: 5\n\t\t\t\t\t\t}} />\n\n\n\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: '40%',\n\t\t\t\t\t\theight: '50%',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={{fontSize: 7.5, fontWeight: 'bold', color: 'gray', justifyContent: 'flex-start'}}> {item.name}</Text>\n\t\t\t\t\t\t<View style={{...styles.sectionTitle, justifyContent: 'center', alignItems: 'center',}}>\n\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\t...styles.percentageSmallboxTextSize, \n\t\t\t\t\t\t\t\tcolor: textColor(percent(item.avail, item.total))\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{percent(item.avail, item.total)}%\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<Text style={{fontSize: 6, color: 'gray'}}> {item.avail} of {item.total}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t\n\t\t\t\t</View>\n\n\n\t\t\t</ShadowedBox>\n\t\t);\n\t});\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<InputBlankInventoryModal\n\t\t\t\tvisible={inputBlkUpdateModalVisible}\n\t\t\t\tonSave={() => setInputBlkUpdateModalVisible(false)}\n\t\t\t>\n\t\t\t</InputBlankInventoryModal>\n\t\t\t<ConfirmInventoryModal\n                sourceImg={imageSelected} \n                drinkName={drinkSelected}\n                pairedItems={[\n                    \"12 ounce cup\"\n                ]}\n\t\t\t\tvisible={additionalInventoryModal} \n\t\t\t\tonSave={() => setAdditionalInventoryModal(false)}/>\n\t\t\t<ShadowedBox width={'80%'} height={'15%'} margin={10} touchable onPress={() => navigation.navigate('Manager Available Inventory Detailed Data List')}>\n\t\t\t\t<View style={styles.rowView}>\n\n\t\t\t\t\t<Text style={{\n\t\t\t\t\t\tfontSize: 17, \n\t\t\t\t\t\tfontWeight:\"bold\",\n\t\t\t\t\t\tmargin: 8,\n\t\t\t\t\t}}>\n\t\t\t\t\t\tAvailable Inventory:\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\twidth: '30%',\n\t\t\t\t\t\t\theight: '80%',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\tmarginRight: 20,\n\t\t\t\t\t\t\tcolor: 'dodgerblue'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t...styles.percentageHeaderBoxTextSize, \n\t\t\t\t\t\t\tcolor: textColor(percent(inventorySummary[0],inventorySummary[1])),\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{percent(inventorySummary[0],inventorySummary[1])}%\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</ShadowedBox>\n\t\t\t<View style={{\n\t\t\t\tjustifyContent:'center', \n\t\t\t}}>\n\t\t\t\t<ScrollView style={{width:'100%',maxHeight:'100%',marginLeft:20}}>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t//height: '60%',\n\t\t\t\t\t\tpaddingLeft: '2%',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{iconList}\n\t\t\t\t\t\t<ShadowedBox \n\t\t\t\t\t\t\twidth={'43%'} \n\t\t\t\t\t\t\tsquare \n\t\t\t\t\t\t\tmargin={5}\n\t\t\t\t\t\t\ttouchable\n\t\t\t\t\t\t\tonPress={() => setInputBlkUpdateModalVisible(true)}>\n\t\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\taspectRatio: 1,\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsource={require('assets/add.png')}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: '40%',\n\t\t\t\t\t\t\t\t\t\theight: '40%',\n\t\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t\t\tresizeMode: 'contain',\n\t\t\t\t\t\t\t\t\t\tmargin: 5\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t<Text>Add Item</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</ShadowedBox>\n\t\t\t\t\t</View>\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f2f2f2',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\tnormalText: {\n\t\tfontSize: 17,\n\t\tfontFamily: 'Arial'\n\t},\n    sectionTitle: {\n        color: \"lightgrey\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n\t\ttextAlign: \"left\",\n        borderBottomColor: \"grey\",\n        borderBottomWidth: 1,\n        width: \"100%\"\n    },\n\trowView: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: 2\n\t},\n\tpercentageSmallboxTextSize: {\n\t\tfontSize: 16, \n    },\n\n\tmaxCapacityText: {\n        color: 'dodgerblue'\n    },\n    sixtyText: {\n        color: 'limegreen'\n    },\n    thirtyText: {\n        color: 'darkkhaki'\n\t},\n\tcriticalText: {\n        color: 'red'\n\t},\n\tpercentageHeaderBoxTextSize: {\n\t\tfontSize: 24,  \n\t\tfontWeight: 'bold', \n\t\tfontFamily: 'Arial'\n\t},\n\tHeaderBoxTextSize: {\n\t\tfontSize: 13,  \n\t}\n});"]},"metadata":{},"sourceType":"module"}