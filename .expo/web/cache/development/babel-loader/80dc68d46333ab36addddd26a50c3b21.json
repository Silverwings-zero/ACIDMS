{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ReturnInventoryDetailedDataScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Accordion from 'react-native-collapsible/Accordion';\nimport Event from 'model/Event';\nimport Job, { getGlobalJobs } from 'model/Job';\nexport default function ReturnInventoryDetailedDataScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSections = _useState2[0],\n      setSections = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStations = _useState4[0],\n      setActiveStations = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stations = _useState6[0],\n      setStations = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      returnList = _useState8[0],\n      setReturnList = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      returnListTotal = _useState10[0],\n      setReturnListTotal = _useState10[1];\n\n  var sections = ['item', 'station'];\n  var images = {\n    dropDownIcon: require('assets/drop-down-arrow.png'),\n    dropUpIcon: require('assets/drop-up-arrow.png')\n  };\n  useEffect(function () {\n    var _Job$getReturnJobsDet = Job.getReturnJobsDetailedData(),\n        _Job$getReturnJobsDet2 = _slicedToArray(_Job$getReturnJobsDet, 2),\n        returnListTotal = _Job$getReturnJobsDet2[0],\n        returnList = _Job$getReturnJobsDet2[1];\n\n    setReturnList(returnList);\n    setReturnListTotal(returnListTotal);\n    var stationKeys = [];\n    returnList.map(function (station) {\n      stationKeys.push(station.name);\n    });\n    setStations(stationKeys);\n  }, []);\n\n  var total = function total(text) {\n    if (text == 'item' || text == 'station') {\n      var res = 0;\n      returnListTotal.map(function (item) {\n        res += item.count;\n      });\n      return res;\n    } else {\n      var _res = 0;\n      returnList.map(function (station) {\n        if (station.name == text) {\n          station.items.map(function (item) {\n            _res += item.count;\n          });\n        }\n      });\n      return _res;\n    }\n  };\n\n  var percent = function percent(a, b) {\n    if (Number(b) == 0) {\n      return 0;\n    }\n\n    return Math.round(a * 100 / b);\n  };\n\n  var totalValue = function totalValue(text) {\n    if (text == 'item' || text == 'station') {\n      var res = 0;\n      returnListTotal.map(function (item) {\n        res += value(item);\n      });\n      return res;\n    } else {\n      var _res2 = 0;\n      returnList.map(function (station) {\n        if (station.name == text) {\n          station.items.map(function (item) {\n            _res2 += value(item);\n          });\n        }\n      });\n      return _res2;\n    }\n  };\n\n  var value = function value(item) {\n    return item.count * item.price;\n  };\n\n  var formatNum = function formatNum(num) {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  var getTitle = function getTitle(text) {\n    if (text == 'item') {\n      return 'Items';\n    } else if (text == 'station') {\n      return 'Stations';\n    } else {\n      return 'Station ' + text;\n    }\n  };\n\n  var getImage = function getImage(text) {\n    if (text == 'item' || text == 'station') {\n      var index = sections.findIndex(function (item) {\n        return item === text;\n      });\n\n      if (activeSections.findIndex(function (item) {\n        return item === index;\n      }) > -1) {\n        return images.dropUpIcon;\n      } else {\n        return images.dropDownIcon;\n      }\n    } else {\n      var _index = stations.findIndex(function (item) {\n        return item === text;\n      });\n\n      if (activeStations.findIndex(function (item) {\n        return item === _index;\n      }) > -1) {\n        return images.dropUpIcon;\n      } else {\n        return images.dropDownIcon;\n      }\n    }\n  };\n\n  var itemRow = function itemRow(item, text) {\n    return React.createElement(View, {\n      style: styles.rowView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.rowTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }\n    }, item.name), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.rowTitle), {}, {\n        color: '#0070F7',\n        fontSize: 20,\n        textAlign: \"right\",\n        flex: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }, percent(item.count, total('item')), \"%\")), React.createElement(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.rowText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }\n    }, \" Qty: \", formatNum(item.count)), React.createElement(Text, {\n      style: styles.rowText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }, \"$ \", formatNum(value(item)), \" \")));\n  };\n\n  var itemList = function itemList(text) {\n    if (text == 'item') {\n      return React.createElement(View, {\n        style: {\n          marginLeft: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, returnListTotal.map(function (item) {\n        return itemRow(item, text);\n      }));\n    } else {\n      return React.createElement(View, {\n        style: {\n          marginLeft: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, React.createElement(Accordion, {\n        activeSections: activeStations,\n        sections: stations,\n        renderHeader: listTitle,\n        renderContent: stationItemList,\n        onChange: setActiveStations,\n        underlayColor: \"#f2f2f2\",\n        expandMultiple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 5\n        }\n      }));\n    }\n  };\n\n  var stationItemList = function stationItemList(text) {\n    return React.createElement(View, {\n      style: {\n        marginLeft: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 10\n      }\n    }, returnList.map(function (station) {\n      if (station.name == text) {\n        return station.items.map(function (item) {\n          return itemRow(item, text);\n        });\n      }\n    }));\n  };\n\n  var listTitle = function listTitle(text) {\n    if (text == 'item' || text == 'station') {\n      return React.createElement(View, {\n        style: styles.rowView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          width: \"100%\",\n          height: 20,\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.rowTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }\n      }, getTitle(text), \":\"), React.createElement(Image, {\n        source: getImage(text),\n        style: {\n          width: \"5%\",\n          marginHorizontal: 10,\n          tintColor: \"grey\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      })), React.createElement(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.rowText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }\n      }, \" Qty: \", formatNum(total(text))), React.createElement(Text, {\n        style: styles.rowText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }\n      }, \"$ \", formatNum(totalValue(text)), \" \")));\n    } else {\n      return React.createElement(View, {\n        style: styles.rowView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          width: \"100%\",\n          height: 20,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.rowTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }\n      }, getTitle(text), \":\"), React.createElement(Image, {\n        source: getImage(text),\n        style: {\n          width: \"5%\",\n          marginHorizontal: 10,\n          tintColor: \"grey\"\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.rowTitle), {}, {\n          color: '#0070F7',\n          fontSize: 20,\n          textAlign: \"right\",\n          flex: 1\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }\n      }, percent(total(text), total('item')), \"%\")), React.createElement(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.rowText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }\n      }, \" Qty: \", formatNum(total(text))), React.createElement(Text, {\n        style: styles.rowText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }\n      }, \"$ \", formatNum(totalValue(text)), \" \")));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 3\n    }\n  }, React.createElement(ShadowedBox, {\n    width: '90%',\n    margin: 10,\n    justifyContent: 'flex-start',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '90%',\n      marginTop: 25,\n      marginBottom: 10,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-start\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 6\n    }\n  }, \"Return Inventory:\")), React.createElement(View, {\n    style: {\n      width: '90%',\n      marginBottom: 25,\n      maxHeight: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, React.createElement(Accordion, {\n    activeSections: activeSections,\n    sections: sections,\n    renderHeader: listTitle,\n    renderContent: itemList,\n    onChange: setSections,\n    underlayColor: \"#f2f2f2\",\n    expandMultiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  rowView: {\n    width: \"100%\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    borderBottomColor: \"grey\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    padding: 5\n  },\n  sectionTitle: {\n    color: \"black\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"left\"\n  },\n  rowTitle: {\n    color: \"#5C5A5A\",\n    fontFamily: \"Arial-BoldMT\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    marginBottom: 2\n  },\n  rowText: {\n    color: \"#5C5A5A\",\n    fontFamily: \"Arial\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["/Users/Terminator/Desktop/Spring2021/CS4440/ACIDMS/screens/ReturnInventoryDetailedDataScreen.js"],"names":["React","useState","useEffect","ShadowedBox","ScrollView","Accordion","Event","Job","getGlobalJobs","ReturnInventoryDetailedDataScreen","navigation","activeSections","setSections","activeStations","setActiveStations","stations","setStations","returnList","setReturnList","returnListTotal","setReturnListTotal","sections","images","dropDownIcon","require","dropUpIcon","getReturnJobsDetailedData","stationKeys","map","station","push","name","total","text","res","item","count","items","percent","a","b","Number","Math","round","totalValue","value","price","formatNum","num","toString","replace","getTitle","getImage","index","findIndex","itemRow","styles","rowView","width","flexDirection","justifyContent","rowTitle","color","fontSize","textAlign","flex","rowText","itemList","marginLeft","listTitle","stationItemList","height","alignItems","marginHorizontal","tintColor","container","marginTop","marginBottom","sectionTitle","maxHeight","StyleSheet","create","backgroundColor","borderBottomColor","borderBottomWidth","hairlineWidth","padding","fontFamily","fontWeight"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport ShadowedBox from 'components/ShadowedBox';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Accordion from 'react-native-collapsible/Accordion';\nimport Event from 'model/Event';\nimport Job, { getGlobalJobs } from 'model/Job';\n\nexport default function ReturnInventoryDetailedDataScreen({ navigation }) {\n\n\tconst [activeSections, setSections] = useState([0]);\n\tconst [activeStations, setActiveStations] = useState([]);\n\tconst [stations, setStations] = useState([]);\n\tconst [returnList, setReturnList] = useState([]);\n\tconst [returnListTotal, setReturnListTotal] = useState([]);\n\tconst sections = ['item', 'station'];\n\t\n\tconst images = {\n\t\tdropDownIcon: require('assets/drop-down-arrow.png'),\n\t\tdropUpIcon: require('assets/drop-up-arrow.png')\n\t}\n\n\tuseEffect(() => {\n\t\tvar [returnListTotal, returnList] = Job.getReturnJobsDetailedData();\n\t\tsetReturnList(returnList);\n\t\tsetReturnListTotal(returnListTotal);\n\t\tvar stationKeys = [];\n\t\treturnList.map(station => {\n\t\t\tstationKeys.push(station.name);\n\t\t});\n\t\tsetStations(stationKeys);\n\t}, [])\n\n\tconst total = (text) => {\n\t\tif (text == 'item' || text == 'station') {\n\t\t\tlet res = 0;\n\t\t\treturnListTotal.map((item) => { res += item.count });\n\t\t\treturn res;\n\t\t} else {\n\t\t\tlet res = 0;\n\t\t\treturnList.map((station) => { \n\t\t\t\tif (station.name == text) {\n\t\t\t\t\tstation.items.map((item) => { res += item.count });\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tconst percent = (a, b) => {\n\t\tif (Number(b) == 0) {\n\t\t\treturn 0\n\t\t}\n\t\treturn  Math.round(a * 100 / b);\n\t}\n\n\tconst totalValue = (text) => {\n\t\tif (text == 'item' || text == 'station') {\n\t\t\tlet res = 0;\n\t\t\treturnListTotal.map((item) => { res += value(item) });\n\t\t\treturn res;\n\t\t} else {\n\t\t\tlet res = 0;\n\t\t\treturnList.map((station) => { \n\t\t\t\tif (station.name == text) {\n\t\t\t\t\tstation.items.map((item) => { res += value(item) });\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tconst value = (item) => {\n\t\treturn item.count * item.price;\n\t}\n\n\tconst formatNum = (num) => {\n\t\treturn num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\t}\n\n\tconst getTitle = (text) => {\n\t\tif (text == 'item') {\n\t\t\treturn 'Items'\n\t\t} else if (text == 'station') {\n\t\t\treturn 'Stations'\n\t\t} else {\n\t\t\treturn 'Station ' + text\n\t\t}\n\t}\n\n\tconst getImage = (text) => {\n\t\tif (text == 'item' || text == 'station') {\n\t\t\tlet index = sections.findIndex(item => item === text)\n\t\t\tif (activeSections.findIndex(item => item === index) > -1) {\n\t\t\t\treturn images.dropUpIcon\n\t\t\t} else {\n\t\t\t\treturn images.dropDownIcon\n\t\t\t}\n\t\t} else {\n\t\t\tlet index = stations.findIndex(item => item === text)\n\t\t\tif (activeStations.findIndex(item => item === index) > -1) {\n\t\t\t\treturn images.dropUpIcon\n\t\t\t} else {\n\t\t\t\treturn images.dropDownIcon\n\t\t\t}\n\t\t}\n\t}\n\n\tconst itemRow = (item, text) => {\n\t\treturn (\n\t\t\t<View style={styles.rowView}>\n\t\t\t\t<View style={{\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t}}>\n\t\t\t\t\t<Text style={styles.rowTitle}>{item.name}</Text>\n\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t...styles.rowTitle, \n\t\t\t\t\t\tcolor: '#0070F7', \n\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\ttextAlign: \"right\",\n\t\t\t\t\t\tflex: 1\n\t\t\t\t\t}}>{percent(item.count, total('item'))}%</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={{\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t}}>\n\t\t\t\t\t<Text style={styles.rowText}> Qty: {formatNum(item.count)}</Text>\n\t\t\t\t\t<Text style={styles.rowText}>$ {formatNum(value(item))} </Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\n\tconst itemList = (text) => {\n\t\tif (text == 'item') {\n\t\t\treturn <View style={{marginLeft: 30}}>\n\t\t\t\t{returnListTotal.map(item => {\n\t\t\t\t\treturn itemRow(item, text);\n\t\t\t\t})}\n\t\t\t</View>\n\t\t}\n\t\telse {\n\t\t\treturn <View style={{marginLeft: 30}}>\n\t\t\t\t<Accordion\n\t\t\t\t\tactiveSections={activeStations}\n\t\t\t\t\tsections={stations}\n\t\t\t\t\trenderHeader={listTitle}\n\t\t\t\t\trenderContent={stationItemList}\n\t\t\t\t\tonChange={setActiveStations}\n\t\t\t\t\tunderlayColor='#f2f2f2'\n\t\t\t\t\texpandMultiple={true}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t}\n\t}\n\n\tconst stationItemList = (text) => {\n\t\treturn <View style={{marginLeft: 30}}>\n\t\t\t{returnList.map((station) => { \n\t\t\t\tif (station.name == text) {\n\t\t\t\t\treturn station.items.map((item) => {\n\t\t\t\t\t\treturn itemRow(item, text);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})}\n\t\t</View>\n\t}\n\n\tconst listTitle = (text) => {\n\t\tif (text == 'item' || text == 'station') {\n\t\t\treturn (\n\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={styles.rowTitle}>{getTitle(text)}:</Text>\n\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\tsource={getImage(text)}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: \"5%\",\n\t\t\t\t\t\t\t\tmarginHorizontal: 10,\n\t\t\t\t\t\t\t\ttintColor: \"grey\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tresizeMode=\"contain\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={styles.rowText}> Qty: {formatNum(total(text))}</Text>\n\t\t\t\t\t\t<Text style={styles.rowText}>$ {formatNum(totalValue(text))} </Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<View style={styles.rowView}>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={styles.rowTitle}>{getTitle(text)}:</Text>\n\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\tsource={getImage(text)}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: \"5%\",\n\t\t\t\t\t\t\t\tmarginHorizontal: 10,\n\t\t\t\t\t\t\t\ttintColor: \"grey\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tresizeMode=\"contain\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t...styles.rowTitle, \n\t\t\t\t\t\t\tcolor: '#0070F7', \n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t\ttextAlign: \"right\",\n\t\t\t\t\t\t\tflex: 1\n\t\t\t\t\t\t}}>{percent(total(text), total('item'))}%</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Text style={styles.rowText}> Qty: {formatNum(total(text))}</Text>\n\t\t\t\t\t\t<Text style={styles.rowText}>$ {formatNum(totalValue(text))} </Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<ShadowedBox width={'90%'} margin={10} justifyContent={'flex-start'}>\n\t\t\t\t<View style={{\n\t\t\t\t\twidth: '90%',\n\t\t\t\t\tmarginTop: 25,\n                    marginBottom: 10,\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n\t\t\t\t\talignItems: \"flex-start\",\n\t\t\t\t}}>\n\t\t\t\t\t<Text style={styles.sectionTitle}>Return Inventory:</Text>\n\t\t\t\t</View>\n                <View style = {{width: '90%', marginBottom: 25, maxHeight: '80%'}}>\n                    <ScrollView>\n\t\t\t\t\t\t<Accordion\n\t\t\t\t\t\t\tactiveSections={activeSections}\n\t\t\t\t\t\t\tsections={sections}\n\t\t\t\t\t\t\trenderHeader={listTitle}\n\t\t\t\t\t\t\trenderContent={itemList}\n\t\t\t\t\t\t\tonChange={setSections}\n\t\t\t\t\t\t\tunderlayColor='#f2f2f2'\n\t\t\t\t\t\t\texpandMultiple={true}\n\t\t\t\t\t\t/>\n                    </ScrollView>\n                </View>\n\t\t\t</ShadowedBox>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#f2f2f2',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t},\n\trowView: {\n        width: \"100%\",\n        flexDirection: \"column\",\n\t\tjustifyContent: \"space-between\",\n\t\talignItems: \"flex-end\",\n\t\tborderBottomColor: \"grey\",\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        padding: 5,\n\t},\n\tsectionTitle: {\n        color: \"black\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 20,\n        fontWeight: \"bold\",\n        textAlign: \"left\",\n\t},\n\trowTitle: {\n        color: \"#5C5A5A\",\n        fontFamily: \"Arial-BoldMT\",\n        fontSize: 16,\n        fontWeight: \"bold\",\n\t\ttextAlign: \"left\",\n\t\tmarginBottom: 2,\n\t},\n\trowText: {\n        color: \"#5C5A5A\",\n        fontFamily: \"Arial\",\n\t\tfontSize: 16,\n\t\tfontWeight: \"normal\",\n        textAlign: \"left\",\n\t}\n});"]},"metadata":{},"sourceType":"module"}